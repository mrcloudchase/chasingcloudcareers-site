"use strict";(self.webpackChunkchasingcloudcareers=self.webpackChunkchasingcloudcareers||[]).push([[5320],{2924:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"support-engineering/advanced-troubleshooting","title":"Advanced Troubleshooting","description":"Master sophisticated problem-solving techniques, performance optimization, security analysis, and complex system debugging that separate expert support engineers from the rest.","source":"@site/docs/support-engineering/03-advanced-troubleshooting.md","sourceDirName":"support-engineering","slug":"/support-engineering/advanced-troubleshooting","permalink":"/chasingcloudcareers-site/docs/support-engineering/advanced-troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/mrcloudchase/chasingcloudcareers-site/tree/main/docs/support-engineering/03-advanced-troubleshooting.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Technical Foundations","permalink":"/chasingcloudcareers-site/docs/support-engineering/technical-foundations"},"next":{"title":"Customer Success and Communication","permalink":"/chasingcloudcareers-site/docs/support-engineering/customer-success"}}');var r=s(4848),t=s(8453);const a={sidebar_position:5},o="Advanced Troubleshooting",c={},l=[{value:"Learning Objectives",id:"learning-objectives",level:2},{value:"1. Advanced Debugging Methodologies",id:"1-advanced-debugging-methodologies",level:2},{value:"The Scientific Method for Complex Issues",id:"the-scientific-method-for-complex-issues",level:3},{value:"Root Cause Analysis (RCA) Framework",id:"root-cause-analysis-rca-framework",level:3},{value:"Advanced Log Analysis",id:"advanced-log-analysis",level:3},{value:"Free Resources",id:"free-resources",level:3},{value:"2. Performance Analysis and Optimization",id:"2-performance-analysis-and-optimization",level:2},{value:"Application Performance Monitoring (APM)",id:"application-performance-monitoring-apm",level:3},{value:"Load Testing and Capacity Planning",id:"load-testing-and-capacity-planning",level:3},{value:"Free Resources",id:"free-resources-1",level:3},{value:"3. Security Incident Investigation",id:"3-security-incident-investigation",level:2},{value:"Security Fundamentals for Support Engineers",id:"security-fundamentals-for-support-engineers",level:3},{value:"Vulnerability Assessment",id:"vulnerability-assessment",level:3},{value:"Free Resources",id:"free-resources-2",level:3},{value:"4. Advanced Monitoring and Observability",id:"4-advanced-monitoring-and-observability",level:2},{value:"The Three Pillars of Observability",id:"the-three-pillars-of-observability",level:3},{value:"Alerting and Incident Management",id:"alerting-and-incident-management",level:3},{value:"Free Resources",id:"free-resources-3",level:3},{value:"5. Complex System Integration Debugging",id:"5-complex-system-integration-debugging",level:2},{value:"Microservices Troubleshooting",id:"microservices-troubleshooting",level:3},{value:"Database Integration Issues",id:"database-integration-issues",level:3},{value:"Third-Party Integration Debugging",id:"third-party-integration-debugging",level:3},{value:"Free Resources",id:"free-resources-4",level:3},{value:"Hands-On Exercises",id:"hands-on-exercises",level:2},{value:"Exercise 1: Performance Investigation",id:"exercise-1-performance-investigation",level:3},{value:"Exercise 2: Security Incident Response",id:"exercise-2-security-incident-response",level:3},{value:"Exercise 3: Distributed System Debugging",id:"exercise-3-distributed-system-debugging",level:3},{value:"Assessment Questions",id:"assessment-questions",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Advanced Tools and Platforms",id:"advanced-tools-and-platforms",level:3},{value:"Professional Development",id:"professional-development",level:3},{value:"Communities and Conferences",id:"communities-and-conferences",level:3}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"advanced-troubleshooting",children:"Advanced Troubleshooting"})}),"\n",(0,r.jsx)(n.p,{children:"Master sophisticated problem-solving techniques, performance optimization, security analysis, and complex system debugging that separate expert support engineers from the rest."}),"\n",(0,r.jsx)(n.h2,{id:"learning-objectives",children:"Learning Objectives"}),"\n",(0,r.jsx)(n.p,{children:"By the end of this module, you will:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Apply advanced debugging methodologies for complex issues"}),"\n",(0,r.jsx)(n.li,{children:"Analyze system performance bottlenecks and optimize solutions"}),"\n",(0,r.jsx)(n.li,{children:"Investigate security incidents and implement preventive measures"}),"\n",(0,r.jsx)(n.li,{children:"Use advanced monitoring and observability tools"}),"\n",(0,r.jsx)(n.li,{children:"Handle multi-system integration problems"}),"\n",(0,r.jsx)(n.li,{children:"Lead incident response and post-mortem analysis"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"1-advanced-debugging-methodologies",children:"1. Advanced Debugging Methodologies"}),"\n",(0,r.jsx)(n.h3,{id:"the-scientific-method-for-complex-issues",children:"The Scientific Method for Complex Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Hypothesis-Driven Debugging"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. Observe the problem symptoms\n2. Form hypotheses about root causes\n3. Design tests to validate/invalidate hypotheses\n4. Execute tests systematically\n5. Analyze results and refine hypotheses\n6. Repeat until root cause identified\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example: Intermittent Application Crashes"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Observation: Application crashes randomly, no clear pattern\nHypotheses:\n- Memory leak causing OOM crashes\n- Race condition in concurrent code\n- External dependency timeout\n- Database connection pool exhaustion\n\nTests:\n- Monitor memory usage over time\n- Enable debug logging for threading\n- Test with external dependencies mocked\n- Monitor database connection metrics\n"})}),"\n",(0,r.jsx)(n.h3,{id:"root-cause-analysis-rca-framework",children:"Root Cause Analysis (RCA) Framework"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"The 5 Whys Technique"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Problem: Website is slow\n\nWhy? Database queries are taking 10+ seconds\nWhy? Missing indexes on frequently queried columns\nWhy? Recent schema changes didn't include index updates\nWhy? Deployment process doesn't validate index requirements\nWhy? No automated performance testing in CI/CD pipeline\n\nRoot Cause: Missing performance validation in deployment process\nSolution: Add automated performance tests and index validation\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fishbone Diagram Analysis"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Problem: API Timeouts\n\nCategories to investigate:\n- People: Team knowledge, training, procedures\n- Process: Deployment, monitoring, incident response\n- Technology: Infrastructure, code, dependencies\n- Environment: Network, hardware, external services\n\nExample Investigation:\nTechnology Branch:\n\u251c\u2500\u2500 Code Issues\n\u2502   \u251c\u2500\u2500 Inefficient algorithms\n\u2502   \u251c\u2500\u2500 Memory leaks\n\u2502   \u2514\u2500\u2500 Blocking operations\n\u251c\u2500\u2500 Infrastructure\n\u2502   \u251c\u2500\u2500 Insufficient resources\n\u2502   \u251c\u2500\u2500 Network latency\n\u2502   \u2514\u2500\u2500 Load balancer config\n\u2514\u2500\u2500 Dependencies\n    \u251c\u2500\u2500 Third-party API limits\n    \u251c\u2500\u2500 Database performance\n    \u2514\u2500\u2500 Cache misses\n"})}),"\n",(0,r.jsx)(n.h3,{id:"advanced-log-analysis",children:"Advanced Log Analysis"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Correlation Analysis"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Correlate errors across multiple services\n# Service A logs\ngrep "2024-01-15 14:3[0-9]" service-a.log | grep ERROR\n\n# Service B logs  \ngrep "2024-01-15 14:3[0-9]" service-b.log | grep ERROR\n\n# Database logs\ngrep "2024-01-15 14:3[0-9]" mysql-error.log\n\n# Load balancer logs\ngrep "2024-01-15 14:3[0-9]" nginx-access.log | grep " 5[0-9][0-9] "\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pattern Recognition"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Identify error patterns\nawk '{print $1, $2, $9}' access.log | sort | uniq -c | sort -nr\n\n# Time-based analysis\ngrep \"ERROR\" application.log | awk '{print $1, $2}' | sort | uniq -c\n\n# User behavior patterns\ngrep \"user_id=\" application.log | sed 's/.*user_id=\\([0-9]*\\).*/\\1/' | sort | uniq -c | sort -nr\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Log Aggregation and Analysis"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Using ELK Stack concepts (even with basic tools)\n# Extract, Transform, Load approach\n\n# Extract relevant data\ngrep "API_CALL" application.log | \\\nawk \'{print $1, $2, $7, $9, $10}\' > api_calls.txt\n\n# Transform data for analysis\ncat api_calls.txt | \\\nawk \'{\n    date=$1" "$2\n    endpoint=$3\n    status=$4\n    response_time=$5\n    print date","endpoint","status","response_time\n}\' > api_calls.csv\n\n# Load into analysis (or Excel/Google Sheets)\n# Analyze patterns, trends, outliers\n'})}),"\n",(0,r.jsx)(n.h3,{id:"free-resources",children:"Free Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://web.mit.edu/6.005/www/fa15/classes/10-debugging/",children:"Debugging Techniques - MIT"})," - Systematic debugging approaches"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://asq.org/quality-resources/root-cause-analysis",children:"Root Cause Analysis Guide - ASQ"})," - Quality management techniques"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.splunk.com/en_us/blog/learn/log-analysis.html",children:"Log Analysis Best Practices - Splunk"})," - Professional log analysis"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://thesystemsthinker.com/",children:"Systems Thinking - Systems Academy"})," - Holistic problem-solving approaches"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-performance-analysis-and-optimization",children:"2. Performance Analysis and Optimization"}),"\n",(0,r.jsx)(n.h3,{id:"application-performance-monitoring-apm",children:"Application Performance Monitoring (APM)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Performance Indicators (KPIs)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Response Time Metrics:\n- Average response time: < 200ms (web), < 50ms (API)\n- 95th percentile: < 500ms\n- 99th percentile: < 1000ms\n- Maximum response time: < 5000ms\n\nThroughput Metrics:\n- Requests per second (RPS)\n- Transactions per minute (TPM)\n- Concurrent users supported\n\nError Metrics:\n- Error rate: < 0.1%\n- 4xx errors: Client-side issues\n- 5xx errors: Server-side issues\n\nResource Utilization:\n- CPU usage: < 70% average\n- Memory usage: < 80% of available\n- Disk I/O: < 80% capacity\n- Network bandwidth: < 70% capacity\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Performance Profiling"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# CPU profiling\n# Using perf (Linux)\nperf record -g ./application\nperf report\n\n# Using top/htop for real-time monitoring\ntop -p $(pgrep application)\nhtop -p $(pgrep application)\n\n# Memory profiling\n# Using valgrind\nvalgrind --tool=memcheck --leak-check=full ./application\n\n# Using system tools\npmap -x PID\ncat /proc/PID/status\ncat /proc/PID/smaps\n\n# I/O profiling\n# Using iotop\niotop -p PID\n\n# Using strace for system calls\nstrace -p PID -e trace=file\nstrace -p PID -e trace=network\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Database Performance Optimization"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Query performance analysis\nEXPLAIN ANALYZE SELECT * FROM users \nWHERE created_at > '2024-01-01' \nAND status = 'active';\n\n-- Index optimization\n-- Before: Full table scan\nSELECT * FROM orders WHERE customer_id = 123;\n\n-- After: Add index\nCREATE INDEX idx_orders_customer_id ON orders(customer_id);\n\n-- Composite indexes for complex queries\nCREATE INDEX idx_orders_customer_status_date \nON orders(customer_id, status, created_at);\n\n-- Query optimization examples\n-- Inefficient: N+1 query problem\nSELECT * FROM users;\n-- For each user: SELECT * FROM orders WHERE user_id = ?\n\n-- Efficient: Join query\nSELECT u.*, o.* FROM users u \nLEFT JOIN orders o ON u.id = o.user_id;\n\n-- Pagination optimization\n-- Inefficient: OFFSET becomes slow with large offsets\nSELECT * FROM products ORDER BY id LIMIT 20 OFFSET 10000;\n\n-- Efficient: Cursor-based pagination\nSELECT * FROM products WHERE id > 10000 ORDER BY id LIMIT 20;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Caching Strategies"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Redis caching examples\n# Cache frequently accessed data\nredis-cli SET "user:123" \'{"name":"John","email":"john@example.com"}\'\nredis-cli GET "user:123"\n\n# Cache with expiration\nredis-cli SETEX "session:abc123" 3600 "user_data"\n\n# Cache invalidation patterns\nredis-cli DEL "user:123"\nredis-cli FLUSHDB  # Clear all cache\n\n# Application-level caching\n# Cache expensive computations\n# Cache database query results\n# Cache API responses\n# Cache rendered HTML/templates\n'})}),"\n",(0,r.jsx)(n.h3,{id:"load-testing-and-capacity-planning",children:"Load Testing and Capacity Planning"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Load Testing with Free Tools"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Apache Bench (ab)\nab -n 1000 -c 10 http://example.com/api/users\n# -n: total requests\n# -c: concurrent requests\n\n# wrk (modern load testing tool)\nwrk -t12 -c400 -d30s http://example.com/api/users\n# -t: threads\n# -c: connections\n# -d: duration\n\n# curl-based load testing\nfor i in {1..100}; do\n    curl -w "@curl-format.txt" -o /dev/null -s http://example.com/api/users &\ndone\nwait\n\n# JMeter (GUI-based)\n# Create test plans with:\n# - Ramp-up scenarios\n# - Different user behaviors\n# - Response validation\n# - Performance assertions\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Capacity Planning Calculations"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Current Performance:\n- Server handles 100 RPS at 70% CPU\n- Peak traffic: 500 concurrent users\n- Average session: 10 requests\n\nCapacity Planning:\n- Target: 1000 concurrent users\n- Required RPS: 1000 users \xd7 10 requests / 60 seconds = 167 RPS\n- Required servers: 167 RPS / 100 RPS = 2 servers (with headroom: 3 servers)\n\nGrowth Planning:\n- Monthly growth: 20%\n- 6-month projection: 1000 \xd7 1.2^6 = 2986 users\n- Infrastructure scaling plan needed\n"})}),"\n",(0,r.jsx)(n.h3,{id:"free-resources-1",children:"Free Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://jmeter.apache.org/usermanual/index.html",children:"Performance Testing Guide - Apache JMeter"})," - Comprehensive load testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://developers.google.com/web/fundamentals/performance",children:"Web Performance Optimization - Google"})," - Web performance best practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://wiki.postgresql.org/wiki/Performance_Optimization",children:"Database Performance Tuning - PostgreSQL"})," - Database optimization techniques"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"http://www.brendangregg.com/linuxperf.html",children:"Linux Performance Tools - Brendan Gregg"})," - System performance analysis"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"3-security-incident-investigation",children:"3. Security Incident Investigation"}),"\n",(0,r.jsx)(n.h3,{id:"security-fundamentals-for-support-engineers",children:"Security Fundamentals for Support Engineers"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common Security Threats"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Web Application Attacks:\n- SQL Injection\n- Cross-Site Scripting (XSS)\n- Cross-Site Request Forgery (CSRF)\n- Authentication bypass\n- Session hijacking\n\nInfrastructure Attacks:\n- DDoS attacks\n- Brute force login attempts\n- Malware infections\n- Privilege escalation\n- Data exfiltration\n\nSocial Engineering:\n- Phishing emails\n- Pretexting calls\n- Baiting attacks\n- Tailgating\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Log Analysis for Security Events"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Failed login attempts\ngrep \"Failed password\" /var/log/auth.log | awk '{print $1, $2, $11}' | sort | uniq -c\n\n# Suspicious IP addresses\ngrep \"Failed password\" /var/log/auth.log | awk '{print $11}' | sort | uniq -c | sort -nr\n\n# Web application attacks\ngrep -E \"(union|select|script|alert)\" /var/log/nginx/access.log\ngrep \" 40[13] \" /var/log/nginx/access.log | head -20\n\n# Unusual user agent strings\nawk '{print $12}' /var/log/nginx/access.log | sort | uniq -c | sort -nr\n\n# Large file uploads (potential data exfiltration)\nawk '$10 > 10000000 {print $1, $4, $7, $10}' /var/log/nginx/access.log\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Network Security Analysis"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Monitor network connections\nnetstat -tulpn | grep ESTABLISHED\nss -tulpn | grep ESTAB\n\n# Check for unusual network activity\ntcpdump -i any -n | grep -E "(SYN|FIN|RST)"\n\n# Monitor DNS queries (potential data exfiltration)\ntcpdump -i any port 53 -A\n\n# Check for backdoors/reverse shells\nlsof -i | grep ESTABLISHED\nps aux | grep -E "(nc|netcat|bash|sh)" | grep -v grep\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incident Response Process"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. Detection and Analysis\n   - Identify security event\n   - Assess scope and impact\n   - Preserve evidence\n   - Document timeline\n\n2. Containment\n   - Isolate affected systems\n   - Prevent lateral movement\n   - Maintain business continuity\n   - Communicate with stakeholders\n\n3. Eradication and Recovery\n   - Remove threat from environment\n   - Patch vulnerabilities\n   - Restore systems from clean backups\n   - Monitor for reoccurrence\n\n4. Post-Incident Analysis\n   - Document lessons learned\n   - Update security procedures\n   - Improve detection capabilities\n   - Train team on new threats\n"})}),"\n",(0,r.jsx)(n.h3,{id:"vulnerability-assessment",children:"Vulnerability Assessment"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Security Scanning with Free Tools"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Nmap for network discovery\nnmap -sS -O target_ip  # SYN scan with OS detection\nnmap -sV target_ip     # Service version detection\nnmap --script vuln target_ip  # Vulnerability scripts\n\n# OpenVAS for vulnerability scanning\n# Web-based vulnerability scanner\n# Comprehensive security testing\n# Regular security assessments\n\n# OWASP ZAP for web application testing\n# Automated security testing\n# Manual penetration testing\n# API security testing\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SSL/TLS Security Analysis"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check SSL certificate\nopenssl s_client -connect example.com:443 -servername example.com\n\n# Test SSL configuration\ncurl -I https://example.com\ncurl --tlsv1.2 https://example.com\n\n# Check certificate expiration\necho | openssl s_client -connect example.com:443 2>/dev/null | \\\nopenssl x509 -noout -dates\n"})}),"\n",(0,r.jsx)(n.h3,{id:"free-resources-2",children:"Free Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.professormesser.com/security-plus/sy0-701/sy0-701-video/sy0-701-comptia-security-plus-course/",children:"CompTIA Security+ Complete Course - Professor Messer"})," - Comprehensive security fundamentals"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.professormesser.com/security-plus/sy0-701/sy0-701-study-groups/",children:"CompTIA Security+ Study Groups - Professor Messer"})," - Live security Q&A sessions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://owasp.org/www-project-top-ten/",children:"OWASP Top 10"})," - Web application security risks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.sans.org/reading-room/",children:"SANS Reading Room"})," - Security research papers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.nist.gov/cyberframework",children:"NIST Cybersecurity Framework"})," - Security best practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.cybrary.it/",children:"Cybrary"})," - Free cybersecurity training"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"4-advanced-monitoring-and-observability",children:"4. Advanced Monitoring and Observability"}),"\n",(0,r.jsx)(n.h3,{id:"the-three-pillars-of-observability",children:"The Three Pillars of Observability"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Metrics"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# System metrics\n# CPU, Memory, Disk, Network utilization\n# Application metrics\n# Response time, throughput, error rate\n# Business metrics\n# User registrations, transactions, revenue\n\n# Prometheus query examples (PromQL)\n# CPU usage\n100 - (avg by (instance) (rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)\n\n# Memory usage\n(node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes) / node_memory_MemTotal_bytes * 100\n\n# HTTP request rate\nrate(http_requests_total[5m])\n\n# Error rate\nrate(http_requests_total{status=~"5.."}[5m]) / rate(http_requests_total[5m])\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Logs"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Structured logging best practices\n# JSON format for machine readability\n{\n  "timestamp": "2024-01-15T14:30:00Z",\n  "level": "ERROR",\n  "service": "user-api",\n  "trace_id": "abc123",\n  "user_id": "user456",\n  "message": "Database connection failed",\n  "error": "connection timeout after 30s",\n  "duration_ms": 30000\n}\n\n# Log aggregation with ELK Stack concepts\n# Elasticsearch: Store and index logs\n# Logstash: Process and transform logs  \n# Kibana: Visualize and search logs\n\n# Basic log analysis queries\n# Find all errors in last hour\ngrep "$(date -d \'1 hour ago\' \'+%Y-%m-%d %H\'):" application.log | grep ERROR\n\n# Top error messages\ngrep ERROR application.log | awk -F\'"message":"\' \'{print $2}\' | awk -F\'"\' \'{print $1}\' | sort | uniq -c | sort -nr\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Traces"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Distributed tracing concepts\n# Track requests across multiple services\n# Identify bottlenecks in microservices\n# Understand service dependencies\n\n# Jaeger tracing example flow\nRequest ID: abc123\n\u251c\u2500\u2500 Frontend Service (50ms)\n\u251c\u2500\u2500 User Service (20ms)\n\u2502   \u2514\u2500\u2500 Database Query (15ms)\n\u251c\u2500\u2500 Order Service (100ms)\n\u2502   \u251c\u2500\u2500 Database Query (30ms)\n\u2502   \u2514\u2500\u2500 Payment Service (60ms)\n\u2502       \u2514\u2500\u2500 External API (45ms)\n\u2514\u2500\u2500 Notification Service (10ms)\n\n# Identify slowest component: Payment Service \u2192 External API\n"})}),"\n",(0,r.jsx)(n.h3,{id:"alerting-and-incident-management",children:"Alerting and Incident Management"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Effective Alerting Strategy"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:'# Alert severity levels\nCritical: Service completely down, immediate response required\nHigh: Significant degradation, response within 15 minutes\nMedium: Minor issues, response within 1 hour\nLow: Informational, response within 24 hours\n\n# Alert examples\n- name: HighErrorRate\n  condition: error_rate > 5%\n  severity: High\n  description: "Error rate above 5% for 5 minutes"\n  \n- name: DatabaseDown\n  condition: database_up == 0\n  severity: Critical\n  description: "Database is not responding"\n  \n- name: HighMemoryUsage\n  condition: memory_usage > 90%\n  severity: Medium\n  description: "Memory usage above 90% for 10 minutes"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"On-Call Best Practices"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Runbook Structure:\n1. Alert Description\n   - What the alert means\n   - Potential impact on users\n   - Severity and urgency\n\n2. Initial Response\n   - First steps to take\n   - How to assess the situation\n   - When to escalate\n\n3. Investigation Steps\n   - Where to look for clues\n   - Common causes and solutions\n   - Diagnostic commands to run\n\n4. Resolution Steps\n   - Step-by-step fix procedures\n   - Verification steps\n   - Communication templates\n\n5. Post-Incident\n   - What to document\n   - Follow-up actions required\n   - Prevention measures\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Incident Communication"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'Status Page Updates:\n"We are investigating reports of slow response times on our API. \nWe will provide an update within 30 minutes."\n\n"We have identified the cause of the API slowness and are \nimplementing a fix. Expected resolution: 15 minutes."\n\n"The issue has been resolved. All services are operating normally. \nWe will publish a post-mortem within 24 hours."\n\nInternal Communication:\n- Incident commander assigned\n- War room established (Slack/Teams channel)\n- Regular updates every 15 minutes\n- Stakeholder notifications sent\n- Customer support team briefed\n'})}),"\n",(0,r.jsx)(n.h3,{id:"free-resources-3",children:"Free Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://prometheus.io/docs/",children:"Prometheus Documentation"})," - Modern monitoring system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://grafana.com/tutorials/",children:"Grafana Tutorials"})," - Visualization and dashboarding"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," - Observability framework"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://sre.google/books/",children:"Site Reliability Engineering Book - Google"})," - SRE practices and principles"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-complex-system-integration-debugging",children:"5. Complex System Integration Debugging"}),"\n",(0,r.jsx)(n.h3,{id:"microservices-troubleshooting",children:"Microservices Troubleshooting"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Service Mesh Debugging"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Service discovery issues\nkubectl get services\nkubectl describe service user-service\nkubectl get endpoints user-service\n\n# Network connectivity between services\nkubectl exec -it pod-name -- curl http://user-service:8080/health\nkubectl exec -it pod-name -- nslookup user-service\n\n# Load balancing issues\nkubectl get pods -l app=user-service\nkubectl describe pod user-service-pod-name\nkubectl logs user-service-pod-name\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"API Gateway Troubleshooting"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Check gateway configuration\ncurl -H "Host: api.example.com" http://gateway-ip/users\ncurl -v http://gateway-ip/users -H "Authorization: Bearer token"\n\n# Trace request path\n# Gateway \u2192 Authentication Service \u2192 User Service \u2192 Database\n# Check each hop for issues\n\n# Rate limiting debugging\ncurl -H "X-Rate-Limit-Key: user123" http://gateway-ip/users\n# Check rate limit headers in response\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Message Queue Debugging"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# RabbitMQ debugging\nrabbitmqctl list_queues name messages consumers\nrabbitmqctl list_exchanges\nrabbitmqctl list_bindings\n\n# Check for dead letter queues\nrabbitmqctl list_queues name messages | grep dlq\n\n# Redis pub/sub debugging\nredis-cli MONITOR\nredis-cli PUBSUB CHANNELS\nredis-cli PUBSUB NUMSUB channel_name\n"})}),"\n",(0,r.jsx)(n.h3,{id:"database-integration-issues",children:"Database Integration Issues"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Multi-Database Transactions"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"-- Distributed transaction debugging\n-- Check transaction logs\nSELECT * FROM information_schema.innodb_trx;\nSHOW ENGINE INNODB STATUS;\n\n-- Deadlock analysis\nSELECT * FROM information_schema.innodb_locks;\nSELECT * FROM information_schema.innodb_lock_waits;\n\n-- Replication lag monitoring\nSHOW SLAVE STATUS\\G\nSELECT SECONDS_BEHIND_MASTER FROM information_schema.replica_host_status;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Data Consistency Issues"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Compare data between systems\n# Primary database vs replica\nmysql -h primary -e "SELECT COUNT(*) FROM users WHERE created_at > \'2024-01-01\'"\nmysql -h replica -e "SELECT COUNT(*) FROM users WHERE created_at > \'2024-01-01\'"\n\n# Cache vs database consistency\nredis-cli GET "user:123"\nmysql -e "SELECT * FROM users WHERE id = 123"\n\n# Event sourcing debugging\n# Check event store for missing events\n# Verify event replay produces correct state\n# Investigate event ordering issues\n'})}),"\n",(0,r.jsx)(n.h3,{id:"third-party-integration-debugging",children:"Third-Party Integration Debugging"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"API Integration Issues"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Test external API directly\ncurl -X GET "https://api.external.com/users" \\\n     -H "Authorization: Bearer $API_KEY" \\\n     -H "Content-Type: application/json" \\\n     -w "@curl-format.txt"\n\n# Check API rate limits\ncurl -I "https://api.external.com/users" \\\n     -H "Authorization: Bearer $API_KEY"\n# Look for: X-RateLimit-Remaining, X-RateLimit-Reset\n\n# Monitor API health\nwhile true; do\n    curl -s -o /dev/null -w "%{http_code} %{time_total}\\n" \\\n         "https://api.external.com/health"\n    sleep 30\ndone\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Webhook Debugging"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Test webhook endpoint\ncurl -X POST "https://your-app.com/webhooks/payment" \\\n     -H "Content-Type: application/json" \\\n     -H "X-Webhook-Signature: signature" \\\n     -d \'{"event": "payment.completed", "data": {...}}\'\n\n# Webhook delivery debugging\n# Check webhook provider logs\n# Verify signature validation\n# Test with ngrok for local development\nngrok http 3000\n# Use ngrok URL for webhook testing\n'})}),"\n",(0,r.jsx)(n.h3,{id:"free-resources-4",children:"Free Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://microservices.io/patterns/",children:"Microservices Patterns"})," - Microservices architecture patterns"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://kubernetes.io/docs/tasks/debug-application-cluster/",children:"Kubernetes Troubleshooting Guide"})," - Container orchestration debugging"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/azure/architecture/best-practices/api-design",children:"API Design Best Practices"})," - API integration guidelines"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://pdos.csail.mit.edu/6.824/",children:"Distributed Systems Course - MIT"})," - Distributed systems fundamentals"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"hands-on-exercises",children:"Hands-On Exercises"}),"\n",(0,r.jsx)(n.h3,{id:"exercise-1-performance-investigation",children:"Exercise 1: Performance Investigation"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Scenario:"})," E-commerce website experiencing 5-second page load times during peak hours."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Investigation Framework:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# 1. Establish baseline metrics\nab -n 100 -c 10 http://example.com/\ncurl -w "@curl-format.txt" -o /dev/null -s http://example.com/\n\n# 2. Identify bottlenecks\n# Frontend performance\n# Use browser DevTools Network tab\n# Check for large assets, slow API calls\n\n# Backend performance  \ntail -f /var/log/nginx/access.log | awk \'{print $4, $7, $9, $10, $11}\'\ngrep "slow query" /var/log/mysql/slow.log\n\n# 3. System resource analysis\ntop -p $(pgrep nginx)\niostat 1 10\nfree -h\n\n# 4. Database performance\nmysql -e "SHOW PROCESSLIST;"\nmysql -e "SHOW STATUS LIKE \'Slow_queries\';"\n\n# 5. Implement optimizations\n# Add database indexes\n# Enable caching\n# Optimize images\n# Use CDN\n'})}),"\n",(0,r.jsx)(n.h3,{id:"exercise-2-security-incident-response",children:"Exercise 2: Security Incident Response"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Scenario:"})," Unusual login attempts detected from multiple IP addresses."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Response Process:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# 1. Immediate assessment\ngrep "Failed password" /var/log/auth.log | tail -50\ngrep "Accepted password" /var/log/auth.log | tail -20\n\n# 2. Identify attack pattern\nawk \'/Failed password/ {print $11}\' /var/log/auth.log | sort | uniq -c | sort -nr\n\n# 3. Check for successful breaches\ngrep "Accepted password" /var/log/auth.log | grep -f suspicious_ips.txt\n\n# 4. Containment actions\n# Block suspicious IPs\niptables -A INPUT -s suspicious_ip -j DROP\n\n# Force password resets for affected accounts\n# Invalidate all active sessions\n# Enable MFA for all accounts\n\n# 5. Investigation and documentation\n# Preserve logs for forensic analysis\n# Document timeline of events\n# Identify security gaps\n# Update security procedures\n'})}),"\n",(0,r.jsx)(n.h3,{id:"exercise-3-distributed-system-debugging",children:"Exercise 3: Distributed System Debugging"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Scenario:"})," Microservices application showing intermittent 500 errors affecting 10% of requests."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Debugging Approach:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# 1. Map the request flow\n# Frontend \u2192 API Gateway \u2192 User Service \u2192 Database\n# Frontend \u2192 API Gateway \u2192 Order Service \u2192 Payment Service \u2192 External API\n\n# 2. Identify error patterns\n# Check each service logs for the same time period\nkubectl logs -f user-service-pod\nkubectl logs -f order-service-pod  \nkubectl logs -f payment-service-pod\n\n# 3. Trace specific requests\n# Use correlation IDs to follow requests across services\ngrep "correlation_id=abc123" */logs/*.log\n\n# 4. Check service health\nkubectl get pods\nkubectl describe pod failing-pod\nkubectl top pods\n\n# 5. Network connectivity testing\nkubectl exec -it test-pod -- curl http://user-service:8080/health\nkubectl exec -it test-pod -- nslookup payment-service\n\n# 6. Database connection analysis\n# Check connection pool status\n# Monitor query performance\n# Verify database health\n'})}),"\n",(0,r.jsx)(n.h2,{id:"assessment-questions",children:"Assessment Questions"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Describe the scientific method approach to debugging complex intermittent issues."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"What are the key metrics you would monitor for a web application's performance?"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Walk through your incident response process for a security breach."})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"How would you troubleshoot a microservices application where requests are failing randomly?"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Design an alerting strategy for a critical e-commerce application."})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsx)(n.p,{children:"After completing this module:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build a monitoring dashboard"})," using free tools like Grafana"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Practice incident response"})," with simulated scenarios"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Set up a complex lab environment"})," with multiple interconnected services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Move to Module 4: Customer Success and Communication"})," to master stakeholder management"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,r.jsx)(n.h3,{id:"advanced-tools-and-platforms",children:"Advanced Tools and Platforms"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.jaegertracing.io/",children:"Jaeger"})," - Distributed tracing system"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://grafana.com/",children:"Grafana"})," - Observability and monitoring"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.elastic.co/what-is/elk-stack",children:"ELK Stack"})," - Log management and analysis"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://principlesofchaos.org/",children:"Chaos Engineering"})," - System resilience testing"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"professional-development",children:"Professional Development"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://sre.google/",children:"Site Reliability Engineering"})," - Google SRE practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://devopsinstitute.com/",children:"DevOps Institute"})," - DevOps and SRE training"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.sans.org/",children:"SANS Institute"})," - Cybersecurity training"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://training.linuxfoundation.org/",children:"Linux Foundation"})," - Open source technology training"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"communities-and-conferences",children:"Communities and Conferences"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://www.usenix.org/conferences/srecon",children:"SREcon"})," - Site Reliability Engineering conference"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://devopsdays.org/",children:"DevOpsDays"})," - Global DevOps community events"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://owasp.org/chapters/",children:"OWASP Local Chapters"})," - Web application security community"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://stackoverflow.com/",children:"Stack Overflow"})," - Technical Q&A community"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ready to master customer relationships and business communication? Continue to ",(0,r.jsx)(n.strong,{children:"Module 4: Customer Success and Communication"})," to learn advanced stakeholder management skills!"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);