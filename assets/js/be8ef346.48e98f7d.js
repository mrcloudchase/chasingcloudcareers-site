"use strict";(self.webpackChunkchasingcloudcareers=self.webpackChunkchasingcloudcareers||[]).push([[1578],{8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var r=s(6540);const i={},a=r.createContext(i);function t(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),r.createElement(a.Provider,{value:n},e.children)}},9372:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"linux-engineering/system-administration","title":"System Administration","description":"Learn essential system administration skills including user management, process control, and system monitoring.","source":"@site/docs/linux-engineering/02-system-administration.md","sourceDirName":"linux-engineering","slug":"/linux-engineering/system-administration","permalink":"/chasingcloudcareers-site/docs/linux-engineering/system-administration","draft":false,"unlisted":false,"editUrl":"https://github.com/mrcloudchase/chasingcloudcareers-site/tree/main/docs/linux-engineering/02-system-administration.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Linux Fundamentals","permalink":"/chasingcloudcareers-site/docs/linux-engineering/linux-fundamentals"},"next":{"title":"Shell Scripting and Automation","permalink":"/chasingcloudcareers-site/docs/linux-engineering/shell-scripting"}}');var i=s(4848),a=s(8453);const t={sidebar_position:3},l="System Administration",o={},c=[{value:"User and Group Management",id:"user-and-group-management",level:2},{value:"Understanding Users and Groups",id:"understanding-users-and-groups",level:3},{value:"Key System Files",id:"key-system-files",level:3},{value:"User Management Commands",id:"user-management-commands",level:3},{value:"Group Management Commands",id:"group-management-commands",level:3},{value:"Practical User Management Examples",id:"practical-user-management-examples",level:3},{value:"Hands-on Exercise: User Management",id:"hands-on-exercise-user-management",level:3},{value:"Process Management",id:"process-management",level:2},{value:"Understanding Processes",id:"understanding-processes",level:3},{value:"Viewing Processes",id:"viewing-processes",level:3},{value:"Managing Processes",id:"managing-processes",level:3},{value:"Process Priority and Nice Values",id:"process-priority-and-nice-values",level:3},{value:"Practical Process Management Examples",id:"practical-process-management-examples",level:3},{value:"Hands-on Exercise: Process Management",id:"hands-on-exercise-process-management",level:3},{value:"System Monitoring",id:"system-monitoring",level:2},{value:"System Resource Monitoring",id:"system-resource-monitoring",level:3},{value:"System Logs",id:"system-logs",level:3},{value:"System Performance Tools",id:"system-performance-tools",level:3},{value:"Practical Monitoring Examples",id:"practical-monitoring-examples",level:3},{value:"Hands-on Exercise: System Monitoring",id:"hands-on-exercise-system-monitoring",level:3},{value:"Service Management with systemd",id:"service-management-with-systemd",level:2},{value:"Understanding systemd",id:"understanding-systemd",level:3},{value:"Managing Services",id:"managing-services",level:3},{value:"Common Service Examples",id:"common-service-examples",level:3},{value:"Creating Custom Services",id:"creating-custom-services",level:3},{value:"Hands-on Exercise: Service Management",id:"hands-on-exercise-service-management",level:3},{value:"Free Learning Resources",id:"free-learning-resources",level:2},{value:"Interactive Practice",id:"interactive-practice",level:3},{value:"Documentation",id:"documentation",level:3},{value:"Video Tutorials",id:"video-tutorials",level:3},{value:"Practice Labs",id:"practice-labs",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"system-administration",children:"System Administration"})}),"\n",(0,i.jsx)(n.p,{children:"Learn essential system administration skills including user management, process control, and system monitoring."}),"\n",(0,i.jsx)(n.h2,{id:"user-and-group-management",children:"User and Group Management"}),"\n",(0,i.jsx)(n.p,{children:"Understanding user and group management is crucial for maintaining secure, multi-user Linux systems."}),"\n",(0,i.jsx)(n.h3,{id:"understanding-users-and-groups",children:"Understanding Users and Groups"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Users in Linux:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Root User"}),": Superuser with unlimited privileges (UID 0)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"System Users"}),": Used by services and daemons (UID 1-999)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular Users"}),": Human users (UID 1000+)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Groups:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Primary Group"}),": User's main group (specified in /etc/passwd)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Secondary Groups"}),": Additional groups user belongs to"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"System Groups"}),": Used by system services"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-system-files",children:"Key System Files"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/etc/passwd"})})," - User account information"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View user information\ncat /etc/passwd\n\n# Example line:\n# john:x:1001:1001:John Doe:/home/john:/bin/bash\n# Format: username:password:UID:GID:full_name:home_dir:shell\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/etc/group"})})," - Group information"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View group information\ncat /etc/group\n\n# Example line:\n# developers:x:1002:john,jane,bob\n# Format: group_name:password:GID:members\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"/etc/shadow"})})," - Encrypted passwords (root access only)"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View shadow file (requires sudo)\nsudo cat /etc/shadow\n\n# Contains encrypted passwords and password policies\n"})}),"\n",(0,i.jsx)(n.h3,{id:"user-management-commands",children:"User Management Commands"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Adding Users"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Add new user (interactive)\nsudo adduser newuser\n\n# Add user with specific options\nsudo useradd -m -s /bin/bash -c "Full Name" username\n\n# Options explained:\n# -m: Create home directory\n# -s: Specify shell\n# -c: Add comment (full name)\n# -d: Specify home directory path\n# -g: Specify primary group\n# -G: Specify secondary groups\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Modifying Users"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Change user's full name\nsudo usermod -c \"New Full Name\" username\n\n# Change user's shell\nsudo usermod -s /bin/zsh username\n\n# Add user to group\nsudo usermod -a -G groupname username\n\n# Change user's home directory\nsudo usermod -d /new/home/path -m username\n\n# Lock user account\nsudo usermod -L username\n\n# Unlock user account\nsudo usermod -U username\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Deleting Users"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Delete user (keep home directory)\nsudo userdel username\n\n# Delete user and home directory\nsudo userdel -r username\n\n# Force deletion (even if user is logged in)\nsudo userdel -f username\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Password Management"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Change your own password\npasswd\n\n# Change another user's password (as root)\nsudo passwd username\n\n# Set password expiration\nsudo passwd -e username  # Force change on next login\n\n# Lock/unlock account\nsudo passwd -l username  # Lock\nsudo passwd -u username  # Unlock\n\n# View password status\nsudo passwd -S username\n"})}),"\n",(0,i.jsx)(n.h3,{id:"group-management-commands",children:"Group Management Commands"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Creating Groups"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create new group\nsudo groupadd developers\n\n# Create group with specific GID\nsudo groupadd -g 2000 admins\n\n# Create system group\nsudo groupadd -r systemgroup\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Modifying Groups"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Add user to group\nsudo gpasswd -a username groupname\n\n# Remove user from group\nsudo gpasswd -d username groupname\n\n# Set group administrators\nsudo gpasswd -A admin1,admin2 groupname\n\n# Change group name\nsudo groupmod -n newname oldname\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Deleting Groups"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Delete group\nsudo groupdel groupname\n\n# Note: Cannot delete if it's a user's primary group\n"})}),"\n",(0,i.jsx)(n.h3,{id:"practical-user-management-examples",children:"Practical User Management Examples"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 1: Setting up a Development Team"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Create developers group\nsudo groupadd developers\n\n# 2. Create shared directory\nsudo mkdir /opt/projects\nsudo chown root:developers /opt/projects\nsudo chmod 775 /opt/projects\n\n# 3. Add users to developers group\nsudo usermod -a -G developers alice\nsudo usermod -a -G developers bob\nsudo usermod -a -G developers charlie\n\n# 4. Verify group membership\ngroups alice\nid alice\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 2: Creating Service Account"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Create system user for web service\nsudo useradd -r -s /bin/false -d /var/www webservice\n\n# Set up directory with proper ownership\nsudo mkdir -p /var/www\nsudo chown webservice:webservice /var/www\nsudo chmod 755 /var/www\n"})}),"\n",(0,i.jsx)(n.h3,{id:"hands-on-exercise-user-management",children:"Hands-on Exercise: User Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Create test users and groups\nsudo groupadd testgroup\nsudo useradd -m -G testgroup testuser1\nsudo useradd -m -G testgroup testuser2\n\n# 2. Set passwords\nsudo passwd testuser1\nsudo passwd testuser2\n\n# 3. Create shared directory\nsudo mkdir /tmp/shared\nsudo chown root:testgroup /tmp/shared\nsudo chmod 775 /tmp/shared\n\n# 4. Test access (switch users)\nsudo su - testuser1\n# Create file in shared directory\ntouch /tmp/shared/user1_file.txt\nexit\n\n# 5. Verify and clean up\nls -la /tmp/shared/\nsudo userdel -r testuser1\nsudo userdel -r testuser2\nsudo groupdel testgroup\n"})}),"\n",(0,i.jsx)(n.h2,{id:"process-management",children:"Process Management"}),"\n",(0,i.jsx)(n.p,{children:"Understanding and managing processes is essential for system administration and troubleshooting."}),"\n",(0,i.jsx)(n.h3,{id:"understanding-processes",children:"Understanding Processes"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"What is a Process?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Running instance of a program"}),"\n",(0,i.jsx)(n.li,{children:"Has unique Process ID (PID)"}),"\n",(0,i.jsx)(n.li,{children:"Consumes system resources (CPU, memory)"}),"\n",(0,i.jsx)(n.li,{children:"Has parent-child relationships"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Process States:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Running (R)"}),": Currently executing"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sleeping (S)"}),": Waiting for event"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stopped (T)"}),": Suspended"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Zombie (Z)"}),": Finished but not cleaned up"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Uninterruptible Sleep (D)"}),": Waiting for I/O"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"viewing-processes",children:"Viewing Processes"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"ps"})," Command - Process Status"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Show processes for current user\nps\n\n# Show all processes (BSD style)\nps aux\n\n# Show all processes (System V style)\nps -ef\n\n# Show process tree\nps -ef --forest\n# or\npstree\n\n# Show processes for specific user\nps -u username\n\n# Show specific process\nps -p PID\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Understanding ps Output:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"ps aux\n# USER  PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND\n# john 1234  0.5  2.1  12345  6789 pts/0    S    10:30   0:05 firefox\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Fields Explained:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"USER"}),": Process owner"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PID"}),": Process ID"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"%CPU"}),": CPU usage percentage"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"%MEM"}),": Memory usage percentage"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"VSZ"}),": Virtual memory size"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RSS"}),": Resident set size (physical memory)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TTY"}),": Terminal associated with process"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"STAT"}),": Process state"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"START"}),": Start time"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TIME"}),": CPU time used"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"COMMAND"}),": Command that started process"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"top"})," Command - Real-time Process Monitoring"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start top\ntop\n\n# Useful top commands while running:\n# q - quit\n# k - kill process (enter PID)\n# r - renice process (change priority)\n# P - sort by CPU usage\n# M - sort by memory usage\n# 1 - show individual CPU cores\n# h - help\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"htop"})," - Enhanced Process Viewer"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install htop (if not available)\nsudo apt update && sudo apt install htop\n\n# Run htop\nhtop\n\n# Features:\n# - Colored output\n# - Mouse support\n# - Easy process killing\n# - System resource graphs\n"})}),"\n",(0,i.jsx)(n.h3,{id:"managing-processes",children:"Managing Processes"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Starting Processes"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Run command in foreground\nfirefox\n\n# Run command in background\nfirefox &\n\n# Run command and disconnect from terminal\nnohup long_running_command &\n\n# Start with specific priority (nice value)\nnice -n 10 cpu_intensive_task\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Process Control with Job Control"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start process\nsleep 100\n\n# Suspend process (Ctrl+Z)\n# [1]+  Stopped    sleep 100\n\n# List jobs\njobs\n\n# Resume in background\nbg %1\n\n# Resume in foreground  \nfg %1\n\n# Kill job\nkill %1\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Killing Processes"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Kill by PID (TERM signal)\nkill PID\n\n# Force kill (KILL signal)\nkill -9 PID\n# or\nkill -KILL PID\n\n# Kill by process name\nkillall firefox\n\n# Kill processes by pattern\npkill -f "python script.py"\n\n# Interactive process killer\nsudo pkill -u username\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common Signals:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"TERM (15)"}),": Polite termination request (default)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"KILL (9)"}),": Force termination (cannot be ignored)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HUP (1)"}),": Hangup (often reloads configuration)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"INT (2)"}),": Interrupt (Ctrl+C)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"STOP (19)"}),": Suspend process"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CONT (18)"}),": Continue suspended process"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"process-priority-and-nice-values",children:"Process Priority and Nice Values"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Understanding Priority:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Nice values range from -20 (highest priority) to 19 (lowest priority)"}),"\n",(0,i.jsx)(n.li,{children:"Default nice value is 0"}),"\n",(0,i.jsx)(n.li,{children:"Only root can set negative nice values"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Changing Priority:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start with specific nice value\nnice -n 5 command\n\n# Change priority of running process\nrenice 10 PID\n\n# Change priority by process name\nrenice 5 -p $(pgrep firefox)\n"})}),"\n",(0,i.jsx)(n.h3,{id:"practical-process-management-examples",children:"Practical Process Management Examples"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 1: Finding Resource-Heavy Processes"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Find processes using most CPU\nps aux --sort=-%cpu | head -10\n\n# Find processes using most memory\nps aux --sort=-%mem | head -10\n\n# Find processes by name\npgrep -l firefox\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 2: Managing Runaway Process"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Identify the problem process\ntop\n# Look for high CPU/memory usage\n\n# 2. Get detailed information\nps -p PID -o pid,ppid,cmd,%cpu,%mem\n\n# 3. Try graceful termination first\nkill PID\n\n# 4. If that doesn't work, force kill\nkill -9 PID\n\n# 5. Verify it's gone\nps -p PID\n"})}),"\n",(0,i.jsx)(n.h3,{id:"hands-on-exercise-process-management",children:"Hands-on Exercise: Process Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Start some test processes\nsleep 300 &\nsleep 400 &\nyes > /dev/null &  # CPU intensive process\n\n# 2. Monitor processes\njobs\nps aux | grep sleep\ntop  # Press 'q' to quit\n\n# 3. Practice process control\n# Suspend a process\nkill -STOP $(pgrep sleep | head -1)\n\n# Resume it\nkill -CONT $(pgrep sleep | head -1)\n\n# 4. Clean up\nkillall sleep\nkillall yes\n"})}),"\n",(0,i.jsx)(n.h2,{id:"system-monitoring",children:"System Monitoring"}),"\n",(0,i.jsx)(n.p,{children:"Effective system monitoring helps maintain system health and troubleshoot issues."}),"\n",(0,i.jsx)(n.h3,{id:"system-resource-monitoring",children:"System Resource Monitoring"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"CPU Monitoring"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Real-time CPU usage\ntop\nhtop\n\n# CPU information\ncat /proc/cpuinfo\nlscpu\n\n# Load average\nuptime\ncat /proc/loadavg\n\n# CPU usage over time\nsar -u 1 5  # 1 second intervals, 5 times\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Memory Monitoring"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Memory usage summary\nfree -h\n\n# Detailed memory information\ncat /proc/meminfo\n\n# Memory usage by process\nps aux --sort=-%mem | head -10\n\n# Real-time memory monitoring\nwatch -n 1 'free -h'\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Disk Usage Monitoring"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Disk space usage by filesystem\ndf -h\n\n# Directory space usage\ndu -h /path/to/directory\n\n# Find largest directories\ndu -h / 2>/dev/null | sort -rh | head -10\n\n# Disk I/O statistics\niostat -x 1 5\n\n# Real-time disk usage\niotop  # May need to install: sudo apt install iotop\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Network Monitoring"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Network interface statistics\nip addr show\nifconfig  # Legacy command\n\n# Network connections\nnetstat -tuln\nss -tuln  # Modern replacement for netstat\n\n# Network traffic\niftop  # Install: sudo apt install iftop\nnethogs  # Install: sudo apt install nethogs\n\n# Ping and connectivity\nping -c 4 google.com\ntraceroute google.com\n"})}),"\n",(0,i.jsx)(n.h3,{id:"system-logs",children:"System Logs"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Log File Locations"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# System logs directory\nls -la /var/log/\n\n# Common log files:\n/var/log/syslog      # General system messages\n/var/log/auth.log    # Authentication logs\n/var/log/kern.log    # Kernel messages\n/var/log/dmesg       # Boot messages\n/var/log/apache2/    # Web server logs (if installed)\n/var/log/mysql/      # Database logs (if installed)\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Viewing Logs"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# View recent system messages\ntail -f /var/log/syslog\n\n# View boot messages\ndmesg | less\n\n# View authentication attempts\nsudo tail -f /var/log/auth.log\n\n# Search logs for specific patterns\ngrep "error" /var/log/syslog\ngrep "failed" /var/log/auth.log\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Using journalctl (systemd systems)"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# View all journal entries\njournalctl\n\n# Follow journal in real-time\njournalctl -f\n\n# View logs for specific service\njournalctl -u ssh.service\n\n# View logs for specific time period\njournalctl --since "2024-01-15 10:00:00"\njournalctl --since "1 hour ago"\n\n# View logs with specific priority\njournalctl -p err  # Error level and above\n'})}),"\n",(0,i.jsx)(n.h3,{id:"system-performance-tools",children:"System Performance Tools"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"vmstat"})," - Virtual Memory Statistics"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Display current stats\nvmstat\n\n# Continuous monitoring (1 second intervals)\nvmstat 1\n\n# Display in MB\nvmstat -S M 1\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"iostat"})," - I/O Statistics"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Display I/O statistics\niostat\n\n# Continuous monitoring with extended stats\niostat -x 1\n\n# Display specific device\niostat -x sda 1\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"sar"})," - System Activity Reporter"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# CPU utilization\nsar -u 1 5\n\n# Memory utilization\nsar -r 1 5\n\n# Network statistics\nsar -n DEV 1 5\n\n# I/O statistics\nsar -b 1 5\n"})}),"\n",(0,i.jsx)(n.h3,{id:"practical-monitoring-examples",children:"Practical Monitoring Examples"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 1: Investigating High Load"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Check load average\nuptime\n\n# 2. Identify CPU-heavy processes\ntop -o %CPU\n\n# 3. Check I/O wait\niostat -x 1\n\n# 4. Look for disk space issues\ndf -h\n\n# 5. Check memory usage\nfree -h\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 2: Monitoring Script"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# Simple system monitoring script\n\necho "=== System Monitor Report ==="\necho "Date: $(date)"\necho ""\n\necho "=== Load Average ==="\nuptime\n\necho ""\necho "=== Memory Usage ==="\nfree -h\n\necho ""\necho "=== Disk Usage ==="\ndf -h\n\necho ""\necho "=== Top 5 CPU Processes ==="\nps aux --sort=-%cpu | head -6\n\necho ""\necho "=== Top 5 Memory Processes ==="\nps aux --sort=-%mem | head -6\n'})}),"\n",(0,i.jsx)(n.h3,{id:"hands-on-exercise-system-monitoring",children:"Hands-on Exercise: System Monitoring"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# 1. Create monitoring directory\nmkdir ~/monitoring_practice\ncd ~/monitoring_practice\n\n# 2. Create the monitoring script above\nnano system_monitor.sh\nchmod +x system_monitor.sh\n\n# 3. Run monitoring commands\n./system_monitor.sh\n\n# 4. Generate some load for testing\n# Terminal 1: CPU load\nyes > /dev/null &\n\n# Terminal 2: Memory usage (be careful with size)\npython3 -c \"\nimport time\ndata = []\nfor i in range(100000):\n    data.append('x' * 1000)\n    if i % 10000 == 0:\n        print(f'Allocated {i} blocks')\n    time.sleep(0.01)\n\"\n\n# 5. Monitor the impact\ntop\nhtop\n./system_monitor.sh\n\n# 6. Clean up\nkillall yes\n# Stop the Python script with Ctrl+C\n"})}),"\n",(0,i.jsx)(n.h2,{id:"service-management-with-systemd",children:"Service Management with systemd"}),"\n",(0,i.jsx)(n.p,{children:"Modern Linux distributions use systemd to manage system services."}),"\n",(0,i.jsx)(n.h3,{id:"understanding-systemd",children:"Understanding systemd"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"What is systemd?"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"System and service manager for Linux"}),"\n",(0,i.jsx)(n.li,{children:"Replaces traditional init systems"}),"\n",(0,i.jsx)(n.li,{children:"Manages services, mount points, devices, and more"}),"\n",(0,i.jsx)(n.li,{children:"Uses unit files to define services"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Unit Types:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"service"}),": System services (daemons)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"target"}),": Groups of units (like runlevels)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"mount"}),": Mount points"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"timer"}),": Scheduled tasks (like cron)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"socket"}),": Network sockets"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"managing-services",children:"Managing Services"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Basic Service Commands"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Start a service\nsudo systemctl start service_name\n\n# Stop a service\nsudo systemctl stop service_name\n\n# Restart a service\nsudo systemctl restart service_name\n\n# Reload service configuration\nsudo systemctl reload service_name\n\n# Enable service (start at boot)\nsudo systemctl enable service_name\n\n# Disable service (don't start at boot)\nsudo systemctl disable service_name\n\n# Check service status\nsystemctl status service_name\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Viewing Services"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# List all services\nsystemctl list-units --type=service\n\n# List enabled services\nsystemctl list-unit-files --type=service --state=enabled\n\n# List failed services\nsystemctl --failed\n\n# List all unit files\nsystemctl list-unit-files\n"})}),"\n",(0,i.jsx)(n.h3,{id:"common-service-examples",children:"Common Service Examples"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"SSH Service Management"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Check SSH service status\nsystemctl status ssh\n\n# Start SSH service\nsudo systemctl start ssh\n\n# Enable SSH to start at boot\nsudo systemctl enable ssh\n\n# View SSH service logs\njournalctl -u ssh.service\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Web Server Management (Apache)"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install Apache (if needed)\nsudo apt update && sudo apt install apache2\n\n# Start Apache\nsudo systemctl start apache2\n\n# Enable Apache\nsudo systemctl enable apache2\n\n# Check status\nsystemctl status apache2\n\n# View logs\njournalctl -u apache2.service -f\n"})}),"\n",(0,i.jsx)(n.h3,{id:"creating-custom-services",children:"Creating Custom Services"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example: Simple Backup Service"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create the script:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano /usr/local/bin/backup_script.sh\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# Simple backup script\n\nBACKUP_DIR="/backup"\nSOURCE_DIR="/home"\nDATE=$(date +%Y%m%d_%H%M%S)\n\nmkdir -p $BACKUP_DIR\ntar -czf $BACKUP_DIR/backup_$DATE.tar.gz $SOURCE_DIR\n\necho "Backup completed: backup_$DATE.tar.gz"\n'})}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Make it executable:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo chmod +x /usr/local/bin/backup_script.sh\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"3",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Create service unit file:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"sudo nano /etc/systemd/system/backup.service\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ini",children:"[Unit]\nDescription=Backup Service\nAfter=network.target\n\n[Service]\nType=oneshot\nExecStart=/usr/local/bin/backup_script.sh\nUser=root\n\n[Install]\nWantedBy=multi-user.target\n"})}),"\n",(0,i.jsxs)(n.ol,{start:"4",children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Enable and test the service:"})}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Reload systemd\nsudo systemctl daemon-reload\n\n# Enable the service\nsudo systemctl enable backup.service\n\n# Start the service\nsudo systemctl start backup.service\n\n# Check status\nsystemctl status backup.service\n"})}),"\n",(0,i.jsx)(n.h3,{id:"hands-on-exercise-service-management",children:"Hands-on Exercise: Service Management"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# 1. Explore current services\nsystemctl list-units --type=service | head -20\nsystemctl --failed\n\n# 2. Practice with SSH service\nsystemctl status ssh\nsudo systemctl stop ssh\nsystemctl status ssh\nsudo systemctl start ssh\n\n# 3. Check service logs\njournalctl -u ssh.service --since "1 hour ago"\n\n# 4. Create a simple test service\nsudo nano /etc/systemd/system/hello.service\n\n# Add this content:\n[Unit]\nDescription=Hello World Service\nAfter=network.target\n\n[Service]\nType=oneshot\nExecStart=/bin/echo "Hello from systemd service!"\nStandardOutput=journal\n\n[Install]\nWantedBy=multi-user.target\n\n# 5. Test the service\nsudo systemctl daemon-reload\nsudo systemctl start hello.service\nsystemctl status hello.service\njournalctl -u hello.service\n\n# 6. Clean up\nsudo systemctl disable hello.service\nsudo rm /etc/systemd/system/hello.service\nsudo systemctl daemon-reload\n'})}),"\n",(0,i.jsx)(n.h2,{id:"free-learning-resources",children:"Free Learning Resources"}),"\n",(0,i.jsx)(n.h3,{id:"interactive-practice",children:"Interactive Practice"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://linuxjourney.com/lesson/monitor-processes-ps-command",children:"Linux Journey - Process Utilization"})}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://overthewire.org/wargames/bandit/",children:"OverTheWire Bandit Levels 10-15"})," - Process and user management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.katacoda.com/courses/linux",children:"Katacoda Linux Administration"})," - Hands-on labs"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"documentation",children:"Documentation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://ubuntu.com/server/docs/security-users",children:"Ubuntu Server Guide - User Management"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.freedesktop.org/wiki/Software/systemd/",children:"systemd Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://tldp.org/LDP/sag/html/",children:"Linux System Administrator's Guide"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"video-tutorials",children:"Video Tutorials"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://linuxacademy.com/",children:"Linux Academy - System Administration"})," - Free tier available"]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.edx.org/course/linux-system-administration",children:"edX - Linux System Administration"})}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"practice-labs",children:"Practice Labs"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.virtualbox.org/",children:"VirtualBox Labs"})," - Create your own lab environment"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.vagrantup.com/",children:"Vagrant"})," - Automated VM provisioning for practice"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"After mastering system administration:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Practice Regularly"}),": Set up a home lab with multiple VMs"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Learn Automation"}),": Move to shell scripting and configuration management"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Explore Security"}),": Learn about system hardening and security practices"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Join Communities"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.reddit.com/r/linuxadmin/",children:"r/linuxadmin"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.linux.org/forums/linux-system-administration.53/",children:"Linux.org System Administration"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Continue to ",(0,i.jsx)(n.strong,{children:"Shell Scripting and Automation"})," to learn how to automate system administration tasks!"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);