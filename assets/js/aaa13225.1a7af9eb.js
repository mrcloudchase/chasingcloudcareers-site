"use strict";(self.webpackChunkchasingcloudcareers=self.webpackChunkchasingcloudcareers||[]).push([[431],{6045:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"cloud-engineering/aws-deep-dive","title":"Major Cloud Providers Deep Dive","description":"Master the three major cloud platforms - Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP) - with comprehensive comparisons, hands-on examples, and cloud-agnostic best practices.","source":"@site/docs/cloud-engineering/02-aws-deep-dive.md","sourceDirName":"cloud-engineering","slug":"/cloud-engineering/aws-deep-dive","permalink":"/chasingcloudcareers-site/docs/cloud-engineering/aws-deep-dive","draft":false,"unlisted":false,"editUrl":"https://github.com/mrcloudchase/chasingcloudcareers-site/tree/main/docs/cloud-engineering/02-aws-deep-dive.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Cloud Computing Fundamentals","permalink":"/chasingcloudcareers-site/docs/cloud-engineering/cloud-fundamentals"},"next":{"title":"Infrastructure as Code (IaC)","permalink":"/chasingcloudcareers-site/docs/cloud-engineering/infrastructure-as-code"}}');var t=s(4848),a=s(8453);const i={sidebar_position:3},o="Major Cloud Providers Deep Dive",c={},l=[{value:"AWS Global Infrastructure",id:"aws-global-infrastructure",level:2},{value:"Regions and Availability Zones",id:"regions-and-availability-zones",level:3},{value:"AWS CLI Setup and Configuration",id:"aws-cli-setup-and-configuration",level:3},{value:"Azure Infrastructure and Services",id:"azure-infrastructure-and-services",level:2},{value:"Azure Global Infrastructure",id:"azure-global-infrastructure",level:3},{value:"Azure CLI Setup and Configuration",id:"azure-cli-setup-and-configuration",level:3},{value:"Azure Core Services",id:"azure-core-services",level:3},{value:"Azure Networking",id:"azure-networking",level:3},{value:"Google Cloud Platform (GCP) Infrastructure and Services",id:"google-cloud-platform-gcp-infrastructure-and-services",level:2},{value:"GCP Global Infrastructure",id:"gcp-global-infrastructure",level:3},{value:"Google Cloud SDK Setup",id:"google-cloud-sdk-setup",level:3},{value:"GCP Core Services",id:"gcp-core-services",level:3},{value:"GCP Networking",id:"gcp-networking",level:3},{value:"Multi-Cloud Service Comparison",id:"multi-cloud-service-comparison",level:2},{value:"Compute Services Comparison",id:"compute-services-comparison",level:3},{value:"Storage Services Comparison",id:"storage-services-comparison",level:3},{value:"Database Services Comparison",id:"database-services-comparison",level:3},{value:"Networking Services Comparison",id:"networking-services-comparison",level:3},{value:"Identity and Security Comparison",id:"identity-and-security-comparison",level:3},{value:"Monitoring and Management Comparison",id:"monitoring-and-management-comparison",level:3},{value:"AI/ML Services Comparison",id:"aiml-services-comparison",level:3},{value:"Cloud Provider Selection Criteria",id:"cloud-provider-selection-criteria",level:2},{value:"When to Choose AWS",id:"when-to-choose-aws",level:3},{value:"When to Choose Azure",id:"when-to-choose-azure",level:3},{value:"When to Choose GCP",id:"when-to-choose-gcp",level:3},{value:"Cloud-Agnostic Architecture Patterns",id:"cloud-agnostic-architecture-patterns",level:2},{value:"1. Multi-Cloud Application Design",id:"1-multi-cloud-application-design",level:3},{value:"2. Environment-Based Cloud Selection",id:"2-environment-based-cloud-selection",level:3},{value:"Core AWS Services",id:"core-aws-services",level:2},{value:"Compute Services",id:"compute-services",level:3},{value:"Storage Services",id:"storage-services",level:3},{value:"Database Services",id:"database-services",level:3},{value:"Networking Services",id:"networking-services",level:3},{value:"AWS Identity and Access Management (IAM)",id:"aws-identity-and-access-management-iam",level:2},{value:"IAM Components",id:"iam-components",level:3},{value:"Multi-Factor Authentication (MFA)",id:"multi-factor-authentication-mfa",level:3},{value:"AWS Monitoring and Logging",id:"aws-monitoring-and-logging",level:2},{value:"Amazon CloudWatch",id:"amazon-cloudwatch",level:3},{value:"AWS CloudTrail",id:"aws-cloudtrail",level:3},{value:"Multi-Cloud Practical Projects",id:"multi-cloud-practical-projects",level:2},{value:"Project 1: Cloud-Agnostic Three-Tier Web Application",id:"project-1-cloud-agnostic-three-tier-web-application",level:3},{value:"Project 2: Serverless Data Processing Pipeline",id:"project-2-serverless-data-processing-pipeline",level:3},{value:"AWS Security Best Practices",id:"aws-security-best-practices",level:2},{value:"Security Fundamentals",id:"security-fundamentals",level:3},{value:"Security Services",id:"security-services",level:3},{value:"Multi-Cloud Learning Resources",id:"multi-cloud-learning-resources",level:2},{value:"AWS Resources",id:"aws-resources",level:3},{value:"Azure Resources",id:"azure-resources",level:3},{value:"Google Cloud Platform Resources",id:"google-cloud-platform-resources",level:3},{value:"Multi-Cloud and Comparison Resources",id:"multi-cloud-and-comparison-resources",level:3},{value:"Certification Paths",id:"certification-paths",level:3},{value:"Practice Platforms",id:"practice-platforms",level:3},{value:"Next Steps",id:"next-steps",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"major-cloud-providers-deep-dive",children:"Major Cloud Providers Deep Dive"})}),"\n",(0,t.jsx)(n.p,{children:"Master the three major cloud platforms - Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform (GCP) - with comprehensive comparisons, hands-on examples, and cloud-agnostic best practices."}),"\n",(0,t.jsx)(n.h2,{id:"aws-global-infrastructure",children:"AWS Global Infrastructure"}),"\n",(0,t.jsx)(n.p,{children:"Understanding AWS infrastructure is crucial for designing resilient and performant applications."}),"\n",(0,t.jsx)(n.h3,{id:"regions-and-availability-zones",children:"Regions and Availability Zones"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS Regions:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# A region is a physical location with multiple data centers\n# Each region is completely independent\n# Choose regions based on:\n- Latency to users\n- Data sovereignty requirements\n- Service availability\n- Cost considerations\n\n# Major AWS Regions:\nus-east-1      # N. Virginia (largest, most services)\nus-west-2      # Oregon\neu-west-1      # Ireland\nap-southeast-1 # Singapore\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Availability Zones (AZs):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# AZs are isolated data centers within a region\n# Each region has 2-6 AZs (typically 3)\n# AZs are connected by high-speed, low-latency networking\n# Design for multi-AZ deployment for high availability\n\n# Example: us-east-1 AZs\nus-east-1a\nus-east-1b\nus-east-1c\nus-east-1d\nus-east-1e\nus-east-1f\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Edge Locations:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Content delivery network (CDN) endpoints\n# 400+ edge locations globally\n# Used by CloudFront and other services\n# Bring content closer to users\n"})}),"\n",(0,t.jsx)(n.h3,{id:"aws-cli-setup-and-configuration",children:"AWS CLI Setup and Configuration"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Installing AWS CLI:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Linux/macOS\ncurl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"\nunzip awscliv2.zip\nsudo ./aws/install\n\n# Verify installation\naws --version\n\n# Windows (PowerShell)\nmsiexec.exe /i https://awscli.amazonaws.com/AWSCLIV2.msi\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS CLI Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure default profile\naws configure\n# AWS Access Key ID: [Enter your access key]\n# AWS Secret Access Key: [Enter your secret key]\n# Default region name: us-east-1\n# Default output format: json\n\n# Configure named profiles\naws configure --profile production\naws configure --profile development\n\n# Use specific profile\naws s3 ls --profile production\n\n# Set environment variables\nexport AWS_PROFILE=production\nexport AWS_DEFAULT_REGION=us-east-1\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS CLI Best Practices:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Use IAM roles instead of access keys when possible\n# Rotate access keys regularly\n# Use least privilege principle\n# Enable MFA for sensitive operations\n# Use AWS CLI profiles for different environments\n"})}),"\n",(0,t.jsx)(n.h2,{id:"azure-infrastructure-and-services",children:"Azure Infrastructure and Services"}),"\n",(0,t.jsx)(n.p,{children:"Microsoft Azure is the second-largest cloud platform, offering strong enterprise integration and hybrid cloud capabilities."}),"\n",(0,t.jsx)(n.h3,{id:"azure-global-infrastructure",children:"Azure Global Infrastructure"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Regions and Availability Zones:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Azure has 60+ regions worldwide\n# Each region contains one or more data centers\n# Availability Zones are physically separate locations within a region\n# Region pairs provide disaster recovery capabilities\n\n# Major Azure Regions:\nEast US        # Primary US region\nWest Europe    # Primary European region\nSoutheast Asia # Primary Asia-Pacific region\nAustralia East # Primary Australia region\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Geography and Compliance:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Geography: Discrete market with data residency requirements\n# Region Pair: Two regions within same geography for DR\n# Availability Zone: Unique physical locations within region\n# Data Center: Physical facility housing compute resources\n"})}),"\n",(0,t.jsx)(n.h3,{id:"azure-cli-setup-and-configuration",children:"Azure CLI Setup and Configuration"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Installing Azure CLI:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Linux (Ubuntu/Debian)\ncurl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n\n# macOS (Homebrew)\nbrew install azure-cli\n\n# Windows (MSI Installer)\n# Download from: https://aka.ms/installazurecliwindows\n\n# Verify installation\naz --version\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure CLI Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Login to Azure\naz login  # Opens browser for authentication\n\n# Login with service principal\naz login --service-principal -u <app-id> -p <password> --tenant <tenant-id>\n\n# Set default subscription\naz account set --subscription "My Subscription"\n\n# List subscriptions\naz account list --output table\n\n# Set default resource group and location\naz configure --defaults group=myResourceGroup location=eastus\n\n# Show current configuration\naz configure --list-defaults\n'})}),"\n",(0,t.jsx)(n.h3,{id:"azure-core-services",children:"Azure Core Services"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Compute Services:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Virtual Machines:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# List available VM sizes\naz vm list-sizes --location eastus --output table\n\n# Create resource group\naz group create --name myResourceGroup --location eastus\n\n# Create virtual machine\naz vm create \\\n  --resource-group myResourceGroup \\\n  --name myVM \\\n  --image UbuntuLTS \\\n  --size Standard_B2s \\\n  --admin-username azureuser \\\n  --generate-ssh-keys \\\n  --public-ip-sku Standard\n\n# List VMs\naz vm list --output table\n\n# Start/Stop VM\naz vm start --resource-group myResourceGroup --name myVM\naz vm stop --resource-group myResourceGroup --name myVM\n\n# Get VM details\naz vm show --resource-group myResourceGroup --name myVM\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Functions (Serverless):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create Function App\naz functionapp create \\\n  --resource-group myResourceGroup \\\n  --consumption-plan-location eastus \\\n  --runtime python \\\n  --runtime-version 3.9 \\\n  --functions-version 4 \\\n  --name myFunctionApp \\\n  --storage-account mystorageaccount\n\n# Deploy function code\nfunc azure functionapp publish myFunctionApp\n\n# View function logs\naz functionapp log tail --name myFunctionApp --resource-group myResourceGroup\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Storage Services:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Blob Storage:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create storage account\naz storage account create \\\n  --name mystorageaccount \\\n  --resource-group myResourceGroup \\\n  --location eastus \\\n  --sku Standard_LRS \\\n  --kind StorageV2\n\n# Get storage account key\naz storage account keys list \\\n  --account-name mystorageaccount \\\n  --resource-group myResourceGroup\n\n# Create container\naz storage container create \\\n  --name mycontainer \\\n  --account-name mystorageaccount\n\n# Upload blob\naz storage blob upload \\\n  --file myfile.txt \\\n  --container-name mycontainer \\\n  --name myfile.txt \\\n  --account-name mystorageaccount\n\n# List blobs\naz storage blob list \\\n  --container-name mycontainer \\\n  --account-name mystorageaccount \\\n  --output table\n\n# Download blob\naz storage blob download \\\n  --container-name mycontainer \\\n  --name myfile.txt \\\n  --file downloaded-file.txt \\\n  --account-name mystorageaccount\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Database Services:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure SQL Database:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create SQL Server\naz sql server create \\\n  --name myserver \\\n  --resource-group myResourceGroup \\\n  --location eastus \\\n  --admin-user myadmin \\\n  --admin-password MySecurePassword123\n\n# Create SQL Database\naz sql db create \\\n  --resource-group myResourceGroup \\\n  --server myserver \\\n  --name mydatabase \\\n  --service-objective Basic\n\n# Create firewall rule\naz sql server firewall-rule create \\\n  --resource-group myResourceGroup \\\n  --server myserver \\\n  --name AllowMyIP \\\n  --start-ip-address 0.0.0.0 \\\n  --end-ip-address 255.255.255.255\n\n# Connect to database\nsqlcmd -S myserver.database.windows.net -d mydatabase -U myadmin -P MySecurePassword123\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Cosmos DB (NoSQL):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create Cosmos DB account\naz cosmosdb create \\\n  --name mycosmosdb \\\n  --resource-group myResourceGroup \\\n  --kind GlobalDocumentDB \\\n  --locations regionName=eastus failoverPriority=0 isZoneRedundant=False\n\n# Create database\naz cosmosdb sql database create \\\n  --account-name mycosmosdb \\\n  --resource-group myResourceGroup \\\n  --name mydatabase\n\n# Create container\naz cosmosdb sql container create \\\n  --account-name mycosmosdb \\\n  --resource-group myResourceGroup \\\n  --database-name mydatabase \\\n  --name mycontainer \\\n  --partition-key-path "/id"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"azure-networking",children:"Azure Networking"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Virtual Network (VNet):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create virtual network\naz network vnet create \\\n  --resource-group myResourceGroup \\\n  --name myVNet \\\n  --address-prefix 10.0.0.0/16 \\\n  --subnet-name mySubnet \\\n  --subnet-prefix 10.0.1.0/24\n\n# Create additional subnet\naz network vnet subnet create \\\n  --resource-group myResourceGroup \\\n  --vnet-name myVNet \\\n  --name myPrivateSubnet \\\n  --address-prefix 10.0.2.0/24\n\n# Create Network Security Group\naz network nsg create \\\n  --resource-group myResourceGroup \\\n  --name myNSG\n\n# Add security rule\naz network nsg rule create \\\n  --resource-group myResourceGroup \\\n  --nsg-name myNSG \\\n  --name myNSGRuleHTTP \\\n  --protocol tcp \\\n  --priority 1001 \\\n  --destination-port-range 80 \\\n  --access allow\n\n# Associate NSG with subnet\naz network vnet subnet update \\\n  --resource-group myResourceGroup \\\n  --vnet-name myVNet \\\n  --name mySubnet \\\n  --network-security-group myNSG\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Load Balancer:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create public IP\naz network public-ip create \\\n  --resource-group myResourceGroup \\\n  --name myPublicIP \\\n  --sku Standard\n\n# Create load balancer\naz network lb create \\\n  --resource-group myResourceGroup \\\n  --name myLoadBalancer \\\n  --sku Standard \\\n  --public-ip-address myPublicIP \\\n  --frontend-ip-name myFrontEndPool \\\n  --backend-pool-name myBackEndPool\n\n# Create health probe\naz network lb probe create \\\n  --resource-group myResourceGroup \\\n  --lb-name myLoadBalancer \\\n  --name myHealthProbe \\\n  --protocol tcp \\\n  --port 80\n\n# Create load balancer rule\naz network lb rule create \\\n  --resource-group myResourceGroup \\\n  --lb-name myLoadBalancer \\\n  --name myHTTPRule \\\n  --protocol tcp \\\n  --frontend-port 80 \\\n  --backend-port 80 \\\n  --frontend-ip-name myFrontEndPool \\\n  --backend-pool-name myBackEndPool \\\n  --probe-name myHealthProbe\n"})}),"\n",(0,t.jsx)(n.h2,{id:"google-cloud-platform-gcp-infrastructure-and-services",children:"Google Cloud Platform (GCP) Infrastructure and Services"}),"\n",(0,t.jsx)(n.p,{children:"Google Cloud Platform excels in data analytics, machine learning, and container technologies."}),"\n",(0,t.jsx)(n.h3,{id:"gcp-global-infrastructure",children:"GCP Global Infrastructure"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"GCP Regions and Zones:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# GCP has 35+ regions and 106+ zones globally\n# Each region contains 3+ zones\n# Zones are isolated data center locations\n# Multi-regional resources span multiple regions\n\n# Major GCP Regions:\nus-central1    # Iowa (largest region)\nus-east1       # South Carolina\neurope-west1   # Belgium\nasia-southeast1 # Singapore\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"GCP Resource Hierarchy:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Organization: Root node (company)\n# Folder: Grouping mechanism (departments)\n# Project: Basic organizing entity (applications)\n# Resources: Individual services (VMs, storage)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"google-cloud-sdk-setup",children:"Google Cloud SDK Setup"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Installing Google Cloud SDK:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Linux/macOS\ncurl https://sdk.cloud.google.com | bash\nexec -l $SHELL\n\n# Windows (PowerShell)\n(New-Object Net.WebClient).DownloadFile("https://dl.google.com/dl/cloudsdk/channels/rapid/GoogleCloudSDKInstaller.exe", "$env:Temp\\GoogleCloudSDKInstaller.exe")\n& $env:Temp\\GoogleCloudSDKInstaller.exe\n\n# Verify installation\ngcloud --version\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"GCP CLI Configuration:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Initialize gcloud\ngcloud init\n\n# Login to GCP\ngcloud auth login\n\n# Set default project\ngcloud config set project my-project-id\n\n# Set default region and zone\ngcloud config set compute/region us-central1\ngcloud config set compute/zone us-central1-a\n\n# List configurations\ngcloud config list\n\n# Create new configuration\ngcloud config configurations create production\ngcloud config configurations activate production\n\n# Enable APIs\ngcloud services enable compute.googleapis.com\ngcloud services enable storage.googleapis.com\ngcloud services enable sqladmin.googleapis.com\n"})}),"\n",(0,t.jsx)(n.h3,{id:"gcp-core-services",children:"GCP Core Services"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google Compute Engine:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# List machine types\ngcloud compute machine-types list --zones=us-central1-a\n\n# Create VM instance\ngcloud compute instances create my-instance \\\n  --zone=us-central1-a \\\n  --machine-type=e2-medium \\\n  --image-family=ubuntu-2004-lts \\\n  --image-project=ubuntu-os-cloud \\\n  --boot-disk-size=10GB \\\n  --tags=http-server,https-server\n\n# List instances\ngcloud compute instances list\n\n# SSH into instance\ngcloud compute ssh my-instance --zone=us-central1-a\n\n# Start/Stop instance\ngcloud compute instances start my-instance --zone=us-central1-a\ngcloud compute instances stop my-instance --zone=us-central1-a\n\n# Delete instance\ngcloud compute instances delete my-instance --zone=us-central1-a\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google Cloud Functions:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Deploy function\ngcloud functions deploy my-function \\\n  --runtime python39 \\\n  --trigger-http \\\n  --allow-unauthenticated \\\n  --source .\n\n# List functions\ngcloud functions list\n\n# View function logs\ngcloud functions logs read my-function\n\n# Delete function\ngcloud functions delete my-function\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google Cloud Storage:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create bucket\ngsutil mb gs://my-unique-bucket-name\n\n# Upload file\ngsutil cp myfile.txt gs://my-unique-bucket-name/\n\n# List bucket contents\ngsutil ls gs://my-unique-bucket-name/\n\n# Download file\ngsutil cp gs://my-unique-bucket-name/myfile.txt ./downloaded-file.txt\n\n# Set bucket permissions\ngsutil iam ch allUsers:objectViewer gs://my-unique-bucket-name\n\n# Sync directory\ngsutil -m rsync -r ./local-directory gs://my-unique-bucket-name/remote-directory/\n\n# Delete bucket\ngsutil rm -r gs://my-unique-bucket-name/\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google Cloud SQL:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create Cloud SQL instance\ngcloud sql instances create my-instance \\\n  --database-version=MYSQL_8_0 \\\n  --tier=db-f1-micro \\\n  --region=us-central1\n\n# Create database\ngcloud sql databases create mydatabase --instance=my-instance\n\n# Create user\ngcloud sql users create myuser \\\n  --instance=my-instance \\\n  --password=mypassword\n\n# Connect to instance\ngcloud sql connect my-instance --user=myuser --database=mydatabase\n\n# List instances\ngcloud sql instances list\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google Firestore (NoSQL):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create Firestore database (via console or API)\ngcloud firestore databases create --region=us-central\n\n# Import data\ngcloud firestore import gs://my-bucket/export-folder/\n\n# Export data\ngcloud firestore export gs://my-bucket/export-folder/\n"})}),"\n",(0,t.jsx)(n.h3,{id:"gcp-networking",children:"GCP Networking"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google VPC Networks:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create VPC network\ngcloud compute networks create my-vpc \\\n  --subnet-mode=custom\n\n# Create subnet\ngcloud compute networks subnets create my-subnet \\\n  --network=my-vpc \\\n  --range=10.0.1.0/24 \\\n  --region=us-central1\n\n# Create firewall rule\ngcloud compute firewall-rules create allow-http \\\n  --network=my-vpc \\\n  --allow=tcp:80 \\\n  --source-ranges=0.0.0.0/0 \\\n  --target-tags=http-server\n\n# List networks\ngcloud compute networks list\n\n# List subnets\ngcloud compute networks subnets list\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google Cloud Load Balancing:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create instance template\ngcloud compute instance-templates create my-template \\\n  --machine-type=e2-micro \\\n  --image-family=ubuntu-2004-lts \\\n  --image-project=ubuntu-os-cloud \\\n  --tags=http-server\n\n# Create managed instance group\ngcloud compute instance-groups managed create my-group \\\n  --template=my-template \\\n  --size=3 \\\n  --zone=us-central1-a\n\n# Create health check\ngcloud compute health-checks create http my-health-check \\\n  --port=80 \\\n  --request-path=/\n\n# Create backend service\ngcloud compute backend-services create my-backend-service \\\n  --protocol=HTTP \\\n  --health-checks=my-health-check \\\n  --global\n\n# Add backend to service\ngcloud compute backend-services add-backend my-backend-service \\\n  --instance-group=my-group \\\n  --instance-group-zone=us-central1-a \\\n  --global\n\n# Create URL map\ngcloud compute url-maps create my-url-map \\\n  --default-service=my-backend-service\n\n# Create HTTP proxy\ngcloud compute target-http-proxies create my-http-proxy \\\n  --url-map=my-url-map\n\n# Create forwarding rule\ngcloud compute forwarding-rules create my-forwarding-rule \\\n  --global \\\n  --target-http-proxy=my-http-proxy \\\n  --ports=80\n"})}),"\n",(0,t.jsx)(n.h2,{id:"multi-cloud-service-comparison",children:"Multi-Cloud Service Comparison"}),"\n",(0,t.jsx)(n.p,{children:"Understanding equivalent services across cloud providers helps you make informed decisions and design cloud-agnostic solutions."}),"\n",(0,t.jsx)(n.h3,{id:"compute-services-comparison",children:"Compute Services Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service Category"}),(0,t.jsx)(n.th,{children:"AWS"}),(0,t.jsx)(n.th,{children:"Azure"}),(0,t.jsx)(n.th,{children:"GCP"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Virtual Machines"})}),(0,t.jsx)(n.td,{children:"EC2"}),(0,t.jsx)(n.td,{children:"Virtual Machines"}),(0,t.jsx)(n.td,{children:"Compute Engine"}),(0,t.jsx)(n.td,{children:"General-purpose computing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Serverless Functions"})}),(0,t.jsx)(n.td,{children:"Lambda"}),(0,t.jsx)(n.td,{children:"Functions"}),(0,t.jsx)(n.td,{children:"Cloud Functions"}),(0,t.jsx)(n.td,{children:"Event-driven computing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Container Service"})}),(0,t.jsx)(n.td,{children:"ECS/Fargate"}),(0,t.jsx)(n.td,{children:"Container Instances"}),(0,t.jsx)(n.td,{children:"Cloud Run"}),(0,t.jsx)(n.td,{children:"Containerized applications"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Kubernetes"})}),(0,t.jsx)(n.td,{children:"EKS"}),(0,t.jsx)(n.td,{children:"AKS"}),(0,t.jsx)(n.td,{children:"GKE"}),(0,t.jsx)(n.td,{children:"Container orchestration"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Batch Computing"})}),(0,t.jsx)(n.td,{children:"Batch"}),(0,t.jsx)(n.td,{children:"Batch"}),(0,t.jsx)(n.td,{children:"Dataflow"}),(0,t.jsx)(n.td,{children:"Large-scale data processing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Auto Scaling"})}),(0,t.jsx)(n.td,{children:"Auto Scaling Groups"}),(0,t.jsx)(n.td,{children:"VM Scale Sets"}),(0,t.jsx)(n.td,{children:"Managed Instance Groups"}),(0,t.jsx)(n.td,{children:"Automatic scaling"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"storage-services-comparison",children:"Storage Services Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service Category"}),(0,t.jsx)(n.th,{children:"AWS"}),(0,t.jsx)(n.th,{children:"Azure"}),(0,t.jsx)(n.th,{children:"GCP"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Object Storage"})}),(0,t.jsx)(n.td,{children:"S3"}),(0,t.jsx)(n.td,{children:"Blob Storage"}),(0,t.jsx)(n.td,{children:"Cloud Storage"}),(0,t.jsx)(n.td,{children:"Files, backups, static websites"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Block Storage"})}),(0,t.jsx)(n.td,{children:"EBS"}),(0,t.jsx)(n.td,{children:"Managed Disks"}),(0,t.jsx)(n.td,{children:"Persistent Disk"}),(0,t.jsx)(n.td,{children:"Database storage, file systems"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"File Storage"})}),(0,t.jsx)(n.td,{children:"EFS"}),(0,t.jsx)(n.td,{children:"Files"}),(0,t.jsx)(n.td,{children:"Filestore"}),(0,t.jsx)(n.td,{children:"Shared file systems"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Archive Storage"})}),(0,t.jsx)(n.td,{children:"Glacier"}),(0,t.jsx)(n.td,{children:"Archive Storage"}),(0,t.jsx)(n.td,{children:"Coldline/Archive"}),(0,t.jsx)(n.td,{children:"Long-term backup"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Content Delivery"})}),(0,t.jsx)(n.td,{children:"CloudFront"}),(0,t.jsx)(n.td,{children:"CDN"}),(0,t.jsx)(n.td,{children:"Cloud CDN"}),(0,t.jsx)(n.td,{children:"Global content distribution"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"database-services-comparison",children:"Database Services Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service Category"}),(0,t.jsx)(n.th,{children:"AWS"}),(0,t.jsx)(n.th,{children:"Azure"}),(0,t.jsx)(n.th,{children:"GCP"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Relational Database"})}),(0,t.jsx)(n.td,{children:"RDS"}),(0,t.jsx)(n.td,{children:"SQL Database"}),(0,t.jsx)(n.td,{children:"Cloud SQL"}),(0,t.jsx)(n.td,{children:"Traditional RDBMS"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"NoSQL Document"})}),(0,t.jsx)(n.td,{children:"DocumentDB"}),(0,t.jsx)(n.td,{children:"Cosmos DB"}),(0,t.jsx)(n.td,{children:"Firestore"}),(0,t.jsx)(n.td,{children:"Document-based applications"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"NoSQL Key-Value"})}),(0,t.jsx)(n.td,{children:"DynamoDB"}),(0,t.jsx)(n.td,{children:"Table Storage"}),(0,t.jsx)(n.td,{children:"Bigtable"}),(0,t.jsx)(n.td,{children:"High-performance applications"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"In-Memory Cache"})}),(0,t.jsx)(n.td,{children:"ElastiCache"}),(0,t.jsx)(n.td,{children:"Cache for Redis"}),(0,t.jsx)(n.td,{children:"Memorystore"}),(0,t.jsx)(n.td,{children:"Session storage, caching"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Data Warehouse"})}),(0,t.jsx)(n.td,{children:"Redshift"}),(0,t.jsx)(n.td,{children:"Synapse Analytics"}),(0,t.jsx)(n.td,{children:"BigQuery"}),(0,t.jsx)(n.td,{children:"Analytics and reporting"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Time Series"})}),(0,t.jsx)(n.td,{children:"Timestream"}),(0,t.jsx)(n.td,{children:"Time Series Insights"}),(0,t.jsx)(n.td,{children:"Cloud Bigtable"}),(0,t.jsx)(n.td,{children:"IoT and monitoring data"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"networking-services-comparison",children:"Networking Services Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service Category"}),(0,t.jsx)(n.th,{children:"AWS"}),(0,t.jsx)(n.th,{children:"Azure"}),(0,t.jsx)(n.th,{children:"GCP"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Virtual Network"})}),(0,t.jsx)(n.td,{children:"VPC"}),(0,t.jsx)(n.td,{children:"Virtual Network"}),(0,t.jsx)(n.td,{children:"VPC Network"}),(0,t.jsx)(n.td,{children:"Network isolation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Load Balancer"})}),(0,t.jsx)(n.td,{children:"ALB/NLB"}),(0,t.jsx)(n.td,{children:"Load Balancer"}),(0,t.jsx)(n.td,{children:"Cloud Load Balancing"}),(0,t.jsx)(n.td,{children:"Traffic distribution"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"DNS"})}),(0,t.jsx)(n.td,{children:"Route 53"}),(0,t.jsx)(n.td,{children:"DNS"}),(0,t.jsx)(n.td,{children:"Cloud DNS"}),(0,t.jsx)(n.td,{children:"Domain name resolution"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"VPN"})}),(0,t.jsx)(n.td,{children:"VPN Gateway"}),(0,t.jsx)(n.td,{children:"VPN Gateway"}),(0,t.jsx)(n.td,{children:"Cloud VPN"}),(0,t.jsx)(n.td,{children:"Secure connectivity"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Direct Connection"})}),(0,t.jsx)(n.td,{children:"Direct Connect"}),(0,t.jsx)(n.td,{children:"ExpressRoute"}),(0,t.jsx)(n.td,{children:"Cloud Interconnect"}),(0,t.jsx)(n.td,{children:"Private connectivity"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"API Gateway"})}),(0,t.jsx)(n.td,{children:"API Gateway"}),(0,t.jsx)(n.td,{children:"API Management"}),(0,t.jsx)(n.td,{children:"Cloud Endpoints"}),(0,t.jsx)(n.td,{children:"API management"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"identity-and-security-comparison",children:"Identity and Security Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service Category"}),(0,t.jsx)(n.th,{children:"AWS"}),(0,t.jsx)(n.th,{children:"Azure"}),(0,t.jsx)(n.th,{children:"GCP"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Identity Management"})}),(0,t.jsx)(n.td,{children:"IAM"}),(0,t.jsx)(n.td,{children:"Active Directory"}),(0,t.jsx)(n.td,{children:"Cloud IAM"}),(0,t.jsx)(n.td,{children:"Access control"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Key Management"})}),(0,t.jsx)(n.td,{children:"KMS"}),(0,t.jsx)(n.td,{children:"Key Vault"}),(0,t.jsx)(n.td,{children:"Cloud KMS"}),(0,t.jsx)(n.td,{children:"Encryption key management"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Secrets Management"})}),(0,t.jsx)(n.td,{children:"Secrets Manager"}),(0,t.jsx)(n.td,{children:"Key Vault"}),(0,t.jsx)(n.td,{children:"Secret Manager"}),(0,t.jsx)(n.td,{children:"Sensitive data storage"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Web Application Firewall"})}),(0,t.jsx)(n.td,{children:"WAF"}),(0,t.jsx)(n.td,{children:"Application Gateway WAF"}),(0,t.jsx)(n.td,{children:"Cloud Armor"}),(0,t.jsx)(n.td,{children:"Web security"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"DDoS Protection"})}),(0,t.jsx)(n.td,{children:"Shield"}),(0,t.jsx)(n.td,{children:"DDoS Protection"}),(0,t.jsx)(n.td,{children:"Cloud Armor"}),(0,t.jsx)(n.td,{children:"Attack mitigation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Security Monitoring"})}),(0,t.jsx)(n.td,{children:"GuardDuty"}),(0,t.jsx)(n.td,{children:"Security Center"}),(0,t.jsx)(n.td,{children:"Security Command Center"}),(0,t.jsx)(n.td,{children:"Threat detection"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"monitoring-and-management-comparison",children:"Monitoring and Management Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service Category"}),(0,t.jsx)(n.th,{children:"AWS"}),(0,t.jsx)(n.th,{children:"Azure"}),(0,t.jsx)(n.th,{children:"GCP"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Monitoring"})}),(0,t.jsx)(n.td,{children:"CloudWatch"}),(0,t.jsx)(n.td,{children:"Monitor"}),(0,t.jsx)(n.td,{children:"Cloud Monitoring"}),(0,t.jsx)(n.td,{children:"Metrics and alerting"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Logging"})}),(0,t.jsx)(n.td,{children:"CloudTrail"}),(0,t.jsx)(n.td,{children:"Activity Log"}),(0,t.jsx)(n.td,{children:"Cloud Logging"}),(0,t.jsx)(n.td,{children:"Audit and compliance"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Application Performance"})}),(0,t.jsx)(n.td,{children:"X-Ray"}),(0,t.jsx)(n.td,{children:"Application Insights"}),(0,t.jsx)(n.td,{children:"Cloud Trace"}),(0,t.jsx)(n.td,{children:"Application monitoring"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Cost Management"})}),(0,t.jsx)(n.td,{children:"Cost Explorer"}),(0,t.jsx)(n.td,{children:"Cost Management"}),(0,t.jsx)(n.td,{children:"Cloud Billing"}),(0,t.jsx)(n.td,{children:"Cost optimization"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Resource Management"})}),(0,t.jsx)(n.td,{children:"CloudFormation"}),(0,t.jsx)(n.td,{children:"Resource Manager"}),(0,t.jsx)(n.td,{children:"Deployment Manager"}),(0,t.jsx)(n.td,{children:"Infrastructure as Code"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"aiml-services-comparison",children:"AI/ML Services Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service Category"}),(0,t.jsx)(n.th,{children:"AWS"}),(0,t.jsx)(n.th,{children:"Azure"}),(0,t.jsx)(n.th,{children:"GCP"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Machine Learning Platform"})}),(0,t.jsx)(n.td,{children:"SageMaker"}),(0,t.jsx)(n.td,{children:"Machine Learning"}),(0,t.jsx)(n.td,{children:"AI Platform"}),(0,t.jsx)(n.td,{children:"ML model development"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Computer Vision"})}),(0,t.jsx)(n.td,{children:"Rekognition"}),(0,t.jsx)(n.td,{children:"Computer Vision"}),(0,t.jsx)(n.td,{children:"Vision API"}),(0,t.jsx)(n.td,{children:"Image analysis"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Natural Language"})}),(0,t.jsx)(n.td,{children:"Comprehend"}),(0,t.jsx)(n.td,{children:"Text Analytics"}),(0,t.jsx)(n.td,{children:"Natural Language API"}),(0,t.jsx)(n.td,{children:"Text processing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Speech Services"})}),(0,t.jsx)(n.td,{children:"Transcribe/Polly"}),(0,t.jsx)(n.td,{children:"Speech Services"}),(0,t.jsx)(n.td,{children:"Speech-to-Text/Text-to-Speech"}),(0,t.jsx)(n.td,{children:"Voice processing"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Translation"})}),(0,t.jsx)(n.td,{children:"Translate"}),(0,t.jsx)(n.td,{children:"Translator"}),(0,t.jsx)(n.td,{children:"Translation API"}),(0,t.jsx)(n.td,{children:"Language translation"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Chatbots"})}),(0,t.jsx)(n.td,{children:"Lex"}),(0,t.jsx)(n.td,{children:"Bot Service"}),(0,t.jsx)(n.td,{children:"Dialogflow"}),(0,t.jsx)(n.td,{children:"Conversational AI"})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"cloud-provider-selection-criteria",children:"Cloud Provider Selection Criteria"}),"\n",(0,t.jsx)(n.h3,{id:"when-to-choose-aws",children:"When to Choose AWS"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Strengths:\n- Largest market share and ecosystem\n- Most comprehensive service portfolio\n- Strong enterprise adoption\n- Extensive third-party integrations\n- Mature compliance and security features\n\n# Best for:\n- Enterprises requiring extensive service options\n- Startups needing rapid scaling\n- Applications requiring global reach\n- Complex multi-service architectures\n- Organizations with existing AWS investments\n"})}),"\n",(0,t.jsx)(n.h3,{id:"when-to-choose-azure",children:"When to Choose Azure"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Strengths:\n- Strong enterprise integration (Office 365, Active Directory)\n- Excellent hybrid cloud capabilities\n- Competitive pricing for Windows workloads\n- Strong developer tools integration\n- Good compliance and governance features\n\n# Best for:\n- Microsoft-centric organizations\n- Hybrid cloud deployments\n- Enterprise applications requiring AD integration\n- .NET and Windows-based applications\n- Organizations with existing Microsoft licenses\n"})}),"\n",(0,t.jsx)(n.h3,{id:"when-to-choose-gcp",children:"When to Choose GCP"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Strengths:\n- Superior data analytics and ML services\n- Competitive pricing and sustained use discounts\n- Strong container and Kubernetes support\n- Excellent network infrastructure\n- Innovation in AI/ML and data processing\n\n# Best for:\n- Data-heavy applications and analytics\n- Machine learning and AI projects\n- Container-native applications\n- Startups and tech companies\n- Applications requiring advanced data processing\n"})}),"\n",(0,t.jsx)(n.h2,{id:"cloud-agnostic-architecture-patterns",children:"Cloud-Agnostic Architecture Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"1-multi-cloud-application-design",children:"1. Multi-Cloud Application Design"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cloud-Agnostic Storage Interface:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'# storage_interface.py\nfrom abc import ABC, abstractmethod\nfrom typing import Dict, Any, Optional\n\nclass CloudStorageInterface(ABC):\n    """Abstract interface for cloud storage operations"""\n    \n    @abstractmethod\n    def upload_file(self, bucket: str, key: str, data: bytes, metadata: Optional[Dict] = None) -> Dict[str, Any]:\n        pass\n    \n    @abstractmethod\n    def download_file(self, bucket: str, key: str) -> bytes:\n        pass\n    \n    @abstractmethod\n    def delete_file(self, bucket: str, key: str) -> bool:\n        pass\n    \n    @abstractmethod\n    def list_files(self, bucket: str, prefix: str = "") -> list:\n        pass\n\nclass AWSStorageAdapter(CloudStorageInterface):\n    """AWS S3 implementation"""\n    \n    def __init__(self, aws_client):\n        self.client = aws_client\n    \n    def upload_file(self, bucket: str, key: str, data: bytes, metadata: Optional[Dict] = None) -> Dict[str, Any]:\n        extra_args = {\'Metadata\': metadata} if metadata else {}\n        response = self.client.put_object(\n            Bucket=bucket, \n            Key=key, \n            Body=data,\n            **extra_args\n        )\n        return {\'etag\': response[\'ETag\'], \'version_id\': response.get(\'VersionId\')}\n    \n    def download_file(self, bucket: str, key: str) -> bytes:\n        response = self.client.get_object(Bucket=bucket, Key=key)\n        return response[\'Body\'].read()\n    \n    def delete_file(self, bucket: str, key: str) -> bool:\n        self.client.delete_object(Bucket=bucket, Key=key)\n        return True\n    \n    def list_files(self, bucket: str, prefix: str = "") -> list:\n        response = self.client.list_objects_v2(Bucket=bucket, Prefix=prefix)\n        return [obj[\'Key\'] for obj in response.get(\'Contents\', [])]\n\nclass AzureStorageAdapter(CloudStorageInterface):\n    """Azure Blob Storage implementation"""\n    \n    def __init__(self, azure_client):\n        self.client = azure_client\n    \n    def upload_file(self, bucket: str, key: str, data: bytes, metadata: Optional[Dict] = None) -> Dict[str, Any]:\n        blob_client = self.client.get_blob_client(container=bucket, blob=key)\n        response = blob_client.upload_blob(data, metadata=metadata, overwrite=True)\n        return {\'etag\': response[\'etag\'], \'last_modified\': response[\'last_modified\']}\n    \n    def download_file(self, bucket: str, key: str) -> bytes:\n        blob_client = self.client.get_blob_client(container=bucket, blob=key)\n        return blob_client.download_blob().readall()\n    \n    def delete_file(self, bucket: str, key: str) -> bool:\n        blob_client = self.client.get_blob_client(container=bucket, blob=key)\n        blob_client.delete_blob()\n        return True\n    \n    def list_files(self, bucket: str, prefix: str = "") -> list:\n        container_client = self.client.get_container_client(bucket)\n        return [blob.name for blob in container_client.list_blobs(name_starts_with=prefix)]\n\nclass GCPStorageAdapter(CloudStorageInterface):\n    """Google Cloud Storage implementation"""\n    \n    def __init__(self, gcp_client):\n        self.client = gcp_client\n    \n    def upload_file(self, bucket: str, key: str, data: bytes, metadata: Optional[Dict] = None) -> Dict[str, Any]:\n        bucket_obj = self.client.bucket(bucket)\n        blob = bucket_obj.blob(key)\n        if metadata:\n            blob.metadata = metadata\n        blob.upload_from_string(data)\n        return {\'etag\': blob.etag, \'generation\': blob.generation}\n    \n    def download_file(self, bucket: str, key: str) -> bytes:\n        bucket_obj = self.client.bucket(bucket)\n        blob = bucket_obj.blob(key)\n        return blob.download_as_bytes()\n    \n    def delete_file(self, bucket: str, key: str) -> bool:\n        bucket_obj = self.client.bucket(bucket)\n        blob = bucket_obj.blob(key)\n        blob.delete()\n        return True\n    \n    def list_files(self, bucket: str, prefix: str = "") -> list:\n        bucket_obj = self.client.bucket(bucket)\n        return [blob.name for blob in bucket_obj.list_blobs(prefix=prefix)]\n\n# Factory pattern for cloud provider selection\nclass CloudStorageFactory:\n    @staticmethod\n    def create_storage_client(provider: str, config: Dict[str, Any]) -> CloudStorageInterface:\n        if provider.lower() == \'aws\':\n            import boto3\n            client = boto3.client(\'s3\', **config)\n            return AWSStorageAdapter(client)\n        elif provider.lower() == \'azure\':\n            from azure.storage.blob import BlobServiceClient\n            client = BlobServiceClient(**config)\n            return AzureStorageAdapter(client)\n        elif provider.lower() == \'gcp\':\n            from google.cloud import storage\n            client = storage.Client(**config)\n            return GCPStorageAdapter(client)\n        else:\n            raise ValueError(f"Unsupported cloud provider: {provider}")\n\n# Usage example\ndef main():\n    # Configuration can be loaded from environment or config files\n    provider = "aws"  # or "azure" or "gcp"\n    config = {\n        "region_name": "us-east-1"  # AWS specific\n        # "account_url": "https://account.blob.core.windows.net/"  # Azure specific\n        # "project": "my-project-id"  # GCP specific\n    }\n    \n    storage = CloudStorageFactory.create_storage_client(provider, config)\n    \n    # Cloud-agnostic operations\n    storage.upload_file("my-bucket", "test.txt", b"Hello, multi-cloud!")\n    data = storage.download_file("my-bucket", "test.txt")\n    files = storage.list_files("my-bucket")\n    \n    print(f"Downloaded: {data.decode()}")\n    print(f"Files: {files}")\n'})}),"\n",(0,t.jsx)(n.h3,{id:"2-environment-based-cloud-selection",children:"2. Environment-Based Cloud Selection"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Cloud Configuration Management:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'# config/environments.yaml\nenvironments:\n  development:\n    cloud_provider: "aws"\n    region: "us-east-1"\n    instance_type: "t3.micro"\n    storage_class: "STANDARD"\n    \n  staging:\n    cloud_provider: "azure"\n    region: "eastus"\n    instance_type: "Standard_B2s"\n    storage_class: "Standard_LRS"\n    \n  production:\n    cloud_provider: "gcp"\n    region: "us-central1"\n    instance_type: "e2-standard-2"\n    storage_class: "STANDARD"\n    \n  disaster_recovery:\n    cloud_provider: "aws"\n    region: "us-west-2"\n    instance_type: "t3.small"\n    storage_class: "STANDARD_IA"\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# cloud_config.py\nimport yaml\nimport os\nfrom typing import Dict, Any\n\nclass CloudConfig:\n    def __init__(self, config_file: str = \"config/environments.yaml\"):\n        with open(config_file, 'r') as f:\n            self.config = yaml.safe_load(f)\n        \n        self.environment = os.getenv('ENVIRONMENT', 'development')\n        self.current_config = self.config['environments'][self.environment]\n    \n    def get_provider(self) -> str:\n        return self.current_config['cloud_provider']\n    \n    def get_region(self) -> str:\n        return self.current_config['region']\n    \n    def get_instance_type(self) -> str:\n        return self.current_config['instance_type']\n    \n    def get_storage_class(self) -> str:\n        return self.current_config['storage_class']\n    \n    def get_provider_config(self) -> Dict[str, Any]:\n        \"\"\"Get provider-specific configuration\"\"\"\n        provider = self.get_provider()\n        \n        if provider == 'aws':\n            return {\n                'region_name': self.get_region(),\n                'instance_type': self.get_instance_type()\n            }\n        elif provider == 'azure':\n            return {\n                'location': self.get_region(),\n                'vm_size': self.get_instance_type()\n            }\n        elif provider == 'gcp':\n            return {\n                'region': self.get_region(),\n                'machine_type': self.get_instance_type()\n            }\n        \n        raise ValueError(f\"Unsupported provider: {provider}\")\n\n# Usage in application\nconfig = CloudConfig()\nprovider = config.get_provider()\nprovider_config = config.get_provider_config()\n\nprint(f\"Using {provider} in {config.get_region()}\")\n"})}),"\n",(0,t.jsx)(n.h2,{id:"core-aws-services",children:"Core AWS Services"}),"\n",(0,t.jsx)(n.h3,{id:"compute-services",children:"Compute Services"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Amazon EC2 (Elastic Compute Cloud):"})}),"\n",(0,t.jsx)(n.p,{children:"EC2 provides scalable virtual servers in the cloud."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Instance Types:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# General Purpose\nt3.micro    # Burstable, 1 vCPU, 1 GB RAM (Free Tier)\nt3.small    # Burstable, 2 vCPU, 2 GB RAM\nm5.large    # Balanced, 2 vCPU, 8 GB RAM\n\n# Compute Optimized\nc5.large    # High-performance processors\nc5.xlarge   # CPU-intensive applications\n\n# Memory Optimized\nr5.large    # High memory-to-vCPU ratio\nx1e.xlarge  # High memory applications\n\n# Storage Optimized\ni3.large    # High sequential read/write\nd2.xlarge   # Distributed file systems\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Launching EC2 Instances:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# List available AMIs (Amazon Machine Images)\naws ec2 describe-images \\\n    --owners amazon \\\n    --filters \"Name=name,Values=amzn2-ami-hvm-*\" \\\n    --query 'Images[*].[ImageId,Name,CreationDate]' \\\n    --output table\n\n# Create key pair\naws ec2 create-key-pair \\\n    --key-name MyKeyPair \\\n    --query 'KeyMaterial' \\\n    --output text > MyKeyPair.pem\nchmod 400 MyKeyPair.pem\n\n# Launch instance\naws ec2 run-instances \\\n    --image-id ami-0abcdef1234567890 \\\n    --count 1 \\\n    --instance-type t3.micro \\\n    --key-name MyKeyPair \\\n    --security-group-ids sg-12345678 \\\n    --subnet-id subnet-12345678 \\\n    --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=MyWebServer}]'\n\n# List instances\naws ec2 describe-instances \\\n    --query 'Reservations[*].Instances[*].[InstanceId,State.Name,PublicIpAddress,Tags[?Key==`Name`].Value|[0]]' \\\n    --output table\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"EC2 User Data (Bootstrap Scripts):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# This script runs when the instance first starts\n\n# Update system\nyum update -y\n\n# Install Apache web server\nyum install -y httpd\n\n# Start Apache and enable auto-start\nsystemctl start httpd\nsystemctl enable httpd\n\n# Create a simple web page\necho "<h1>Hello from AWS EC2!</h1>" > /var/www/html/index.html\necho "<p>Instance ID: $(curl -s http://169.254.169.254/latest/meta-data/instance-id)</p>" >> /var/www/html/index.html\necho "<p>Availability Zone: $(curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone)</p>" >> /var/www/html/index.html\n\n# Configure firewall\nsystemctl start firewalld\nsystemctl enable firewalld\nfirewall-cmd --permanent --add-service=http\nfirewall-cmd --reload\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS Lambda (Serverless Computing):"})}),"\n",(0,t.jsx)(n.p,{children:"Lambda runs code without provisioning servers."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Creating a Lambda Function:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"# lambda_function.py\nimport json\nimport boto3\nfrom datetime import datetime\n\ndef lambda_handler(event, context):\n    \"\"\"\n    Simple Lambda function that processes events\n    \"\"\"\n    \n    # Get current timestamp\n    timestamp = datetime.now().isoformat()\n    \n    # Process the event\n    message = event.get('message', 'Hello from Lambda!')\n    \n    # Example: Write to CloudWatch Logs\n    print(f\"Processing message: {message} at {timestamp}\")\n    \n    # Example: Interact with other AWS services\n    # s3 = boto3.client('s3')\n    # dynamodb = boto3.resource('dynamodb')\n    \n    # Return response\n    return {\n        'statusCode': 200,\n        'body': json.dumps({\n            'message': message,\n            'timestamp': timestamp,\n            'function_name': context.function_name\n        })\n    }\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Deploying Lambda with AWS CLI:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create deployment package\nzip function.zip lambda_function.py\n\n# Create Lambda function\naws lambda create-function \\\n    --function-name MyLambdaFunction \\\n    --runtime python3.9 \\\n    --role arn:aws:iam::123456789012:role/lambda-execution-role \\\n    --handler lambda_function.lambda_handler \\\n    --zip-file fileb://function.zip \\\n    --description "My first Lambda function"\n\n# Invoke Lambda function\naws lambda invoke \\\n    --function-name MyLambdaFunction \\\n    --payload \'{"message": "Hello from CLI!"}\' \\\n    response.json\n\n# View response\ncat response.json\n'})}),"\n",(0,t.jsx)(n.h3,{id:"storage-services",children:"Storage Services"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Amazon S3 (Simple Storage Service):"})}),"\n",(0,t.jsx)(n.p,{children:"S3 provides object storage with industry-leading scalability and durability."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"S3 Storage Classes:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Standard: Frequently accessed data\n# Standard-IA: Infrequently accessed data\n# One Zone-IA: Infrequently accessed, single AZ\n# Glacier: Long-term archival (minutes to hours retrieval)\n# Glacier Deep Archive: Long-term archival (12+ hours retrieval)\n# Intelligent-Tiering: Automatic cost optimization\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"S3 Operations:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create bucket\naws s3 mb s3://my-unique-bucket-name-12345\n\n# Upload file\naws s3 cp myfile.txt s3://my-unique-bucket-name-12345/\n\n# Upload with metadata\naws s3 cp myfile.txt s3://my-unique-bucket-name-12345/ \\\n    --metadata "author=john,project=demo"\n\n# Sync directory\naws s3 sync ./local-folder s3://my-unique-bucket-name-12345/remote-folder/\n\n# List objects\naws s3 ls s3://my-unique-bucket-name-12345/ --recursive\n\n# Download file\naws s3 cp s3://my-unique-bucket-name-12345/myfile.txt ./downloaded-file.txt\n\n# Set public read access\naws s3api put-object-acl \\\n    --bucket my-unique-bucket-name-12345 \\\n    --key myfile.txt \\\n    --acl public-read\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"S3 Bucket Policies:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Sid": "PublicReadGetObject",\n      "Effect": "Allow",\n      "Principal": "*",\n      "Action": "s3:GetObject",\n      "Resource": "arn:aws:s3:::my-unique-bucket-name-12345/*"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Amazon EBS (Elastic Block Store):"})}),"\n",(0,t.jsx)(n.p,{children:"EBS provides persistent block storage for EC2 instances."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"EBS Volume Types:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# General Purpose SSD (gp3/gp2)\n# - Balanced price/performance\n# - 3,000-16,000 IOPS\n# - Use cases: Boot volumes, development environments\n\n# Provisioned IOPS SSD (io2/io1)\n# - High IOPS performance\n# - Up to 64,000 IOPS\n# - Use cases: Databases, I/O intensive applications\n\n# Throughput Optimized HDD (st1)\n# - Low cost, high throughput\n# - Use cases: Big data, data warehouses\n\n# Cold HDD (sc1)\n# - Lowest cost\n# - Use cases: Infrequent access\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"EBS Operations:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create EBS volume\naws ec2 create-volume \\\n    --size 10 \\\n    --volume-type gp3 \\\n    --availability-zone us-east-1a \\\n    --tag-specifications 'ResourceType=volume,Tags=[{Key=Name,Value=MyDataVolume}]'\n\n# Attach volume to instance\naws ec2 attach-volume \\\n    --volume-id vol-12345678 \\\n    --instance-id i-12345678 \\\n    --device /dev/sdf\n\n# Create snapshot\naws ec2 create-snapshot \\\n    --volume-id vol-12345678 \\\n    --description \"Backup of MyDataVolume\"\n\n# List snapshots\naws ec2 describe-snapshots --owner-ids self\n"})}),"\n",(0,t.jsx)(n.h3,{id:"database-services",children:"Database Services"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Amazon RDS (Relational Database Service):"})}),"\n",(0,t.jsx)(n.p,{children:"RDS provides managed relational databases."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Supported Database Engines:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# MySQL\n# PostgreSQL\n# MariaDB\n# Oracle\n# Microsoft SQL Server\n# Amazon Aurora (MySQL/PostgreSQL compatible)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Creating RDS Instance:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create DB subnet group\naws rds create-db-subnet-group \\\n    --db-subnet-group-name mydb-subnet-group \\\n    --db-subnet-group-description "Subnet group for my database" \\\n    --subnet-ids subnet-12345678 subnet-87654321\n\n# Create RDS instance\naws rds create-db-instance \\\n    --db-instance-identifier mydb-instance \\\n    --db-instance-class db.t3.micro \\\n    --engine mysql \\\n    --master-username admin \\\n    --master-user-password MySecurePassword123 \\\n    --allocated-storage 20 \\\n    --db-subnet-group-name mydb-subnet-group \\\n    --vpc-security-group-ids sg-12345678 \\\n    --backup-retention-period 7 \\\n    --multi-az \\\n    --storage-encrypted\n\n# Connect to RDS instance\nmysql -h mydb-instance.abcdefghijk.us-east-1.rds.amazonaws.com -u admin -p\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Amazon DynamoDB (NoSQL Database):"})}),"\n",(0,t.jsx)(n.p,{children:"DynamoDB is a fully managed NoSQL database service."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"DynamoDB Operations:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create table\naws dynamodb create-table \\\n    --table-name Users \\\n    --attribute-definitions \\\n        AttributeName=UserId,AttributeType=S \\\n    --key-schema \\\n        AttributeName=UserId,KeyType=HASH \\\n    --billing-mode PAY_PER_REQUEST\n\n# Put item\naws dynamodb put-item \\\n    --table-name Users \\\n    --item \'{\n        "UserId": {"S": "user123"},\n        "Name": {"S": "John Doe"},\n        "Email": {"S": "john@example.com"},\n        "Age": {"N": "30"}\n    }\'\n\n# Get item\naws dynamodb get-item \\\n    --table-name Users \\\n    --key \'{"UserId": {"S": "user123"}}\'\n\n# Query items\naws dynamodb scan --table-name Users\n'})}),"\n",(0,t.jsx)(n.h3,{id:"networking-services",children:"Networking Services"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Amazon VPC (Virtual Private Cloud):"})}),"\n",(0,t.jsx)(n.p,{children:"VPC provides isolated network environments in AWS."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"VPC Components:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# VPC: Virtual network dedicated to your account\n# Subnets: Range of IP addresses in your VPC\n# Internet Gateway: Allows communication with internet\n# NAT Gateway: Allows outbound internet access for private subnets\n# Route Tables: Control where network traffic is directed\n# Security Groups: Virtual firewalls for instances\n# NACLs: Subnet-level security\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Creating VPC with CLI:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create VPC\naws ec2 create-vpc \\\n    --cidr-block 10.0.0.0/16 \\\n    --tag-specifications 'ResourceType=vpc,Tags=[{Key=Name,Value=MyVPC}]'\n\n# Create Internet Gateway\naws ec2 create-internet-gateway \\\n    --tag-specifications 'ResourceType=internet-gateway,Tags=[{Key=Name,Value=MyIGW}]'\n\n# Attach Internet Gateway to VPC\naws ec2 attach-internet-gateway \\\n    --internet-gateway-id igw-12345678 \\\n    --vpc-id vpc-12345678\n\n# Create public subnet\naws ec2 create-subnet \\\n    --vpc-id vpc-12345678 \\\n    --cidr-block 10.0.1.0/24 \\\n    --availability-zone us-east-1a \\\n    --tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value=PublicSubnet}]'\n\n# Create private subnet\naws ec2 create-subnet \\\n    --vpc-id vpc-12345678 \\\n    --cidr-block 10.0.2.0/24 \\\n    --availability-zone us-east-1b \\\n    --tag-specifications 'ResourceType=subnet,Tags=[{Key=Name,Value=PrivateSubnet}]'\n\n# Create route table for public subnet\naws ec2 create-route-table \\\n    --vpc-id vpc-12345678 \\\n    --tag-specifications 'ResourceType=route-table,Tags=[{Key=Name,Value=PublicRouteTable}]'\n\n# Add route to internet gateway\naws ec2 create-route \\\n    --route-table-id rtb-12345678 \\\n    --destination-cidr-block 0.0.0.0/0 \\\n    --gateway-id igw-12345678\n\n# Associate route table with subnet\naws ec2 associate-route-table \\\n    --route-table-id rtb-12345678 \\\n    --subnet-id subnet-12345678\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Security Groups:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create security group\naws ec2 create-security-group \\\n    --group-name WebServerSG \\\n    --description "Security group for web servers" \\\n    --vpc-id vpc-12345678\n\n# Add inbound rules\naws ec2 authorize-security-group-ingress \\\n    --group-id sg-12345678 \\\n    --protocol tcp \\\n    --port 80 \\\n    --cidr 0.0.0.0/0\n\naws ec2 authorize-security-group-ingress \\\n    --group-id sg-12345678 \\\n    --protocol tcp \\\n    --port 443 \\\n    --cidr 0.0.0.0/0\n\naws ec2 authorize-security-group-ingress \\\n    --group-id sg-12345678 \\\n    --protocol tcp \\\n    --port 22 \\\n    --source-group sg-87654321  # SSH from bastion host SG only\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Elastic Load Balancer (ELB):"})}),"\n",(0,t.jsx)(n.p,{children:"ELB distributes incoming traffic across multiple targets."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Application Load Balancer (ALB):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create Application Load Balancer\naws elbv2 create-load-balancer \\\n    --name MyALB \\\n    --subnets subnet-12345678 subnet-87654321 \\\n    --security-groups sg-12345678\n\n# Create target group\naws elbv2 create-target-group \\\n    --name MyTargets \\\n    --protocol HTTP \\\n    --port 80 \\\n    --vpc-id vpc-12345678 \\\n    --health-check-path /health\n\n# Register targets\naws elbv2 register-targets \\\n    --target-group-arn arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/MyTargets/1234567890123456 \\\n    --targets Id=i-12345678 Id=i-87654321\n\n# Create listener\naws elbv2 create-listener \\\n    --load-balancer-arn arn:aws:elasticloadbalancing:us-east-1:123456789012:loadbalancer/app/MyALB/1234567890123456 \\\n    --protocol HTTP \\\n    --port 80 \\\n    --default-actions Type=forward,TargetGroupArn=arn:aws:elasticloadbalancing:us-east-1:123456789012:targetgroup/MyTargets/1234567890123456\n"})}),"\n",(0,t.jsx)(n.h2,{id:"aws-identity-and-access-management-iam",children:"AWS Identity and Access Management (IAM)"}),"\n",(0,t.jsx)(n.p,{children:"IAM controls access to AWS services and resources securely."}),"\n",(0,t.jsx)(n.h3,{id:"iam-components",children:"IAM Components"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Users, Groups, and Roles:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Users: Individual people or services\n# Groups: Collection of users with similar permissions\n# Roles: Set of permissions that can be assumed by users or services\n# Policies: Documents that define permissions\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Creating IAM Users:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create user\naws iam create-user --user-name john-doe\n\n# Create access key for user\naws iam create-access-key --user-name john-doe\n\n# Attach policy to user\naws iam attach-user-policy \\\n    --user-name john-doe \\\n    --policy-arn arn:aws:iam::aws:policy/ReadOnlyAccess\n\n# Create and attach inline policy\naws iam put-user-policy \\\n    --user-name john-doe \\\n    --policy-name S3Access \\\n    --policy-document file://s3-policy.json\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"IAM Policies:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Action": [\n        "s3:GetObject",\n        "s3:PutObject",\n        "s3:DeleteObject"\n      ],\n      "Resource": "arn:aws:s3:::my-bucket/*"\n    },\n    {\n      "Effect": "Allow",\n      "Action": [\n        "s3:ListBucket"\n      ],\n      "Resource": "arn:aws:s3:::my-bucket"\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"IAM Roles:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create role trust policy\ncat > trust-policy.json << EOF\n{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Effect": "Allow",\n      "Principal": {\n        "Service": "ec2.amazonaws.com"\n      },\n      "Action": "sts:AssumeRole"\n    }\n  ]\n}\nEOF\n\n# Create role\naws iam create-role \\\n    --role-name EC2S3AccessRole \\\n    --assume-role-policy-document file://trust-policy.json\n\n# Attach policy to role\naws iam attach-role-policy \\\n    --role-name EC2S3AccessRole \\\n    --policy-arn arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess\n\n# Create instance profile\naws iam create-instance-profile \\\n    --instance-profile-name EC2S3AccessProfile\n\n# Add role to instance profile\naws iam add-role-to-instance-profile \\\n    --instance-profile-name EC2S3AccessProfile \\\n    --role-name EC2S3AccessRole\n'})}),"\n",(0,t.jsx)(n.h3,{id:"multi-factor-authentication-mfa",children:"Multi-Factor Authentication (MFA)"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Enabling MFA:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create virtual MFA device\naws iam create-virtual-mfa-device \\\n    --virtual-mfa-device-name john-doe-mfa \\\n    --outfile QRCode.png \\\n    --bootstrap-method QRCodePNG\n\n# Enable MFA device (after scanning QR code)\naws iam enable-mfa-device \\\n    --user-name john-doe \\\n    --serial-number arn:aws:iam::123456789012:mfa/john-doe-mfa \\\n    --authentication-code1 123456 \\\n    --authentication-code2 789012\n"})}),"\n",(0,t.jsx)(n.h2,{id:"aws-monitoring-and-logging",children:"AWS Monitoring and Logging"}),"\n",(0,t.jsx)(n.h3,{id:"amazon-cloudwatch",children:"Amazon CloudWatch"}),"\n",(0,t.jsx)(n.p,{children:"CloudWatch provides monitoring and observability for AWS resources."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"CloudWatch Metrics:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# List available metrics\naws cloudwatch list-metrics --namespace AWS/EC2\n\n# Get metric statistics\naws cloudwatch get-metric-statistics \\\n    --namespace AWS/EC2 \\\n    --metric-name CPUUtilization \\\n    --dimensions Name=InstanceId,Value=i-12345678 \\\n    --statistics Average \\\n    --start-time 2024-01-15T00:00:00Z \\\n    --end-time 2024-01-15T23:59:59Z \\\n    --period 3600\n\n# Create custom metric\naws cloudwatch put-metric-data \\\n    --namespace MyApp/Performance \\\n    --metric-data MetricName=ResponseTime,Value=150,Unit=Milliseconds\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"CloudWatch Alarms:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create alarm\naws cloudwatch put-metric-alarm \\\n    --alarm-name HighCPUUtilization \\\n    --alarm-description "Alarm when CPU exceeds 80%" \\\n    --metric-name CPUUtilization \\\n    --namespace AWS/EC2 \\\n    --statistic Average \\\n    --period 300 \\\n    --threshold 80 \\\n    --comparison-operator GreaterThanThreshold \\\n    --dimensions Name=InstanceId,Value=i-12345678 \\\n    --evaluation-periods 2 \\\n    --alarm-actions arn:aws:sns:us-east-1:123456789012:high-cpu-topic\n\n# List alarms\naws cloudwatch describe-alarms --state-value ALARM\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"CloudWatch Logs:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create log group\naws logs create-log-group --log-group-name /aws/lambda/my-function\n\n# Create log stream\naws logs create-log-stream \\\n    --log-group-name /aws/lambda/my-function \\\n    --log-stream-name 2024/01/15/stream1\n\n# Put log events\naws logs put-log-events \\\n    --log-group-name /aws/lambda/my-function \\\n    --log-stream-name 2024/01/15/stream1 \\\n    --log-events timestamp=1642204800000,message="Function started"\n\n# Query logs\naws logs filter-log-events \\\n    --log-group-name /aws/lambda/my-function \\\n    --filter-pattern "ERROR"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"aws-cloudtrail",children:"AWS CloudTrail"}),"\n",(0,t.jsx)(n.p,{children:"CloudTrail provides governance, compliance, and audit for your AWS account."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Setting up CloudTrail:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create S3 bucket for CloudTrail logs\naws s3 mb s3://my-cloudtrail-logs-12345\n\n# Create CloudTrail\naws cloudtrail create-trail \\\n    --name MyCloudTrail \\\n    --s3-bucket-name my-cloudtrail-logs-12345 \\\n    --include-global-service-events \\\n    --is-multi-region-trail\n\n# Start logging\naws cloudtrail start-logging --name MyCloudTrail\n\n# Look up events\naws cloudtrail lookup-events \\\n    --lookup-attributes AttributeKey=EventName,AttributeValue=CreateUser \\\n    --start-time 2024-01-15T00:00:00Z \\\n    --end-time 2024-01-15T23:59:59Z\n"})}),"\n",(0,t.jsx)(n.h2,{id:"multi-cloud-practical-projects",children:"Multi-Cloud Practical Projects"}),"\n",(0,t.jsx)(n.h3,{id:"project-1-cloud-agnostic-three-tier-web-application",children:"Project 1: Cloud-Agnostic Three-Tier Web Application"}),"\n",(0,t.jsx)(n.p,{children:"Build the same scalable web application architecture across AWS, Azure, and GCP to understand service equivalents and deployment differences."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Universal Architecture Pattern:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Internet Gateway/Load Balancer\n    \u2193\nWeb Tier (Public Subnets)\n    \u2193\nApplication Tier (Private Subnets)\n    \u2193\nDatabase Tier (Private Subnets)\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Provider-Specific Implementations:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS Implementation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# AWS Services Used:\n# - VPC with public/private subnets\n# - Application Load Balancer (ALB)\n# - EC2 instances with Auto Scaling Groups\n# - RDS MySQL database\n# - S3 for static assets\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Implementation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Azure Services Used:\n# - Virtual Network with subnets\n# - Application Gateway\n# - Virtual Machine Scale Sets\n# - Azure SQL Database\n# - Blob Storage for static assets\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"GCP Implementation:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# GCP Services Used:\n# - VPC Network with subnets\n# - Cloud Load Balancing\n# - Managed Instance Groups\n# - Cloud SQL MySQL\n# - Cloud Storage for static assets\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Implementation Steps:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Create VPC and Networking:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Create VPC\naws ec2 create-vpc --cidr-block 10.0.0.0/16\n\n# Create subnets\naws ec2 create-subnet --vpc-id vpc-12345678 --cidr-block 10.0.1.0/24 --availability-zone us-east-1a  # Public 1\naws ec2 create-subnet --vpc-id vpc-12345678 --cidr-block 10.0.2.0/24 --availability-zone us-east-1b  # Public 2\naws ec2 create-subnet --vpc-id vpc-12345678 --cidr-block 10.0.3.0/24 --availability-zone us-east-1a  # Private 1\naws ec2 create-subnet --vpc-id vpc-12345678 --cidr-block 10.0.4.0/24 --availability-zone us-east-1b  # Private 2\n\n# Create and attach Internet Gateway\naws ec2 create-internet-gateway\naws ec2 attach-internet-gateway --internet-gateway-id igw-12345678 --vpc-id vpc-12345678\n\n# Create NAT Gateway\naws ec2 create-nat-gateway --subnet-id subnet-12345678 --allocation-id eipalloc-12345678\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. Launch Web Servers:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create launch template\naws ec2 create-launch-template \\\n    --launch-template-name WebServerTemplate \\\n    --launch-template-data \'{\n        "ImageId": "ami-0abcdef1234567890",\n        "InstanceType": "t3.micro",\n        "KeyName": "MyKeyPair",\n        "SecurityGroupIds": ["sg-12345678"],\n        "UserData": "\'$(base64 -w 0 user-data.sh)\'"\n    }\'\n\n# Create Auto Scaling Group\naws autoscaling create-auto-scaling-group \\\n    --auto-scaling-group-name WebServerASG \\\n    --launch-template LaunchTemplateName=WebServerTemplate,Version=1 \\\n    --min-size 2 \\\n    --max-size 4 \\\n    --desired-capacity 2 \\\n    --vpc-zone-identifier "subnet-12345678,subnet-87654321"\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"3. Set up Database:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create RDS subnet group\naws rds create-db-subnet-group \\\n    --db-subnet-group-name webapp-db-subnet-group \\\n    --db-subnet-group-description "Subnet group for web app database" \\\n    --subnet-ids subnet-12345678 subnet-87654321\n\n# Create RDS instance\naws rds create-db-instance \\\n    --db-instance-identifier webapp-database \\\n    --db-instance-class db.t3.micro \\\n    --engine mysql \\\n    --master-username admin \\\n    --master-user-password SecurePassword123 \\\n    --allocated-storage 20 \\\n    --db-subnet-group-name webapp-db-subnet-group \\\n    --vpc-security-group-ids sg-87654321\n'})}),"\n",(0,t.jsx)(n.h3,{id:"project-2-serverless-data-processing-pipeline",children:"Project 2: Serverless Data Processing Pipeline"}),"\n",(0,t.jsx)(n.p,{children:"Build a serverless pipeline to process data using Lambda, S3, and DynamoDB."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Architecture:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"S3 Bucket (Data Upload)\n    \u2193 (Trigger)\nLambda Function (Process Data)\n    \u2193 (Store Results)\nDynamoDB Table\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Implementation:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Create S3 Bucket:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"aws s3 mb s3://data-processing-pipeline-12345\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. Create DynamoDB Table:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"aws dynamodb create-table \\\n    --table-name ProcessedData \\\n    --attribute-definitions \\\n        AttributeName=FileId,AttributeType=S \\\n        AttributeName=ProcessedAt,AttributeType=S \\\n    --key-schema \\\n        AttributeName=FileId,KeyType=HASH \\\n        AttributeName=ProcessedAt,KeyType=RANGE \\\n    --billing-mode PAY_PER_REQUEST\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"3. Create Lambda Function:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import json\nimport boto3\nimport csv\nfrom datetime import datetime\nfrom urllib.parse import unquote_plus\n\ns3 = boto3.client('s3')\ndynamodb = boto3.resource('dynamodb')\ntable = dynamodb.Table('ProcessedData')\n\ndef lambda_handler(event, context):\n    for record in event['Records']:\n        bucket = record['s3']['bucket']['name']\n        key = unquote_plus(record['s3']['object']['key'])\n        \n        # Download file from S3\n        response = s3.get_object(Bucket=bucket, Key=key)\n        content = response['Body'].read().decode('utf-8')\n        \n        # Process CSV data\n        csv_reader = csv.DictReader(content.splitlines())\n        processed_count = 0\n        \n        for row in csv_reader:\n            # Process each row and store in DynamoDB\n            table.put_item(\n                Item={\n                    'FileId': key,\n                    'ProcessedAt': datetime.now().isoformat(),\n                    'Data': row,\n                    'Status': 'Processed'\n                }\n            )\n            processed_count += 1\n        \n        print(f\"Processed {processed_count} records from {key}\")\n    \n    return {\n        'statusCode': 200,\n        'body': json.dumps('Processing complete')\n    }\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"4. Set up S3 Event Notification:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create notification configuration\ncat > notification.json << EOF\n{\n    "LambdaConfigurations": [\n        {\n            "Id": "ProcessDataNotification",\n            "LambdaFunctionArn": "arn:aws:lambda:us-east-1:123456789012:function:ProcessDataFunction",\n            "Events": ["s3:ObjectCreated:*"],\n            "Filter": {\n                "Key": {\n                    "FilterRules": [\n                        {\n                            "Name": "suffix",\n                            "Value": ".csv"\n                        }\n                    ]\n                }\n            }\n        }\n    ]\n}\nEOF\n\n# Apply notification configuration\naws s3api put-bucket-notification-configuration \\\n    --bucket data-processing-pipeline-12345 \\\n    --notification-configuration file://notification.json\n'})}),"\n",(0,t.jsx)(n.h2,{id:"aws-security-best-practices",children:"AWS Security Best Practices"}),"\n",(0,t.jsx)(n.h3,{id:"security-fundamentals",children:"Security Fundamentals"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"1. Identity and Access Management:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Use IAM roles instead of access keys\n# Implement least privilege principle\n# Enable MFA for all users\n# Rotate credentials regularly\n# Use AWS Organizations for multi-account management\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"2. Network Security:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Use VPCs to isolate resources\n# Implement security groups and NACLs\n# Use private subnets for databases and internal services\n# Enable VPC Flow Logs for monitoring\n# Use AWS WAF for web application protection\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"3. Data Protection:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Encrypt data at rest and in transit\n# Use AWS KMS for key management\n# Enable S3 bucket versioning and MFA delete\n# Implement backup and disaster recovery\n# Use AWS Secrets Manager for sensitive data\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"4. Monitoring and Compliance:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Enable CloudTrail for all regions\n# Set up CloudWatch alarms for security events\n# Use AWS Config for compliance monitoring\n# Implement AWS GuardDuty for threat detection\n# Regular security assessments and penetration testing\n"})}),"\n",(0,t.jsx)(n.h3,{id:"security-services",children:"Security Services"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS KMS (Key Management Service):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create customer managed key\naws kms create-key \\\n    --description "My application encryption key" \\\n    --key-usage ENCRYPT_DECRYPT\n\n# Create alias for key\naws kms create-alias \\\n    --alias-name alias/my-app-key \\\n    --target-key-id 12345678-1234-1234-1234-123456789012\n\n# Encrypt data\naws kms encrypt \\\n    --key-id alias/my-app-key \\\n    --plaintext "Hello World" \\\n    --output text \\\n    --query CiphertextBlob\n\n# Decrypt data\naws kms decrypt \\\n    --ciphertext-blob fileb://encrypted-data \\\n    --output text \\\n    --query Plaintext | base64 --decode\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS Secrets Manager:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'# Create secret\naws secretsmanager create-secret \\\n    --name MyDatabasePassword \\\n    --description "Password for production database" \\\n    --secret-string \'{"username":"admin","password":"MySecurePassword123"}\'\n\n# Retrieve secret\naws secretsmanager get-secret-value \\\n    --secret-id MyDatabasePassword \\\n    --query SecretString \\\n    --output text\n'})}),"\n",(0,t.jsx)(n.h2,{id:"multi-cloud-learning-resources",children:"Multi-Cloud Learning Resources"}),"\n",(0,t.jsx)(n.h3,{id:"aws-resources",children:"AWS Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://aws.amazon.com/free/",children:"AWS Free Tier"})," - 12 months of free services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://aws.amazon.com/training/",children:"AWS Training and Certification"})," - Free digital courses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://aws.amazon.com/getting-started/hands-on/",children:"AWS Hands-On Tutorials"})," - Step-by-step guides"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://aws.amazon.com/architecture/well-architected/",children:"AWS Well-Architected Framework"})," - Best practices"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/",children:"AWS Documentation"})," - Comprehensive service documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.aws.amazon.com/cli/latest/userguide/",children:"AWS CLI User Guide"})," - Command line interface guide"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.a,{href:"https://repost.aws/",children:["AWS re",":Post"]})," - Community Q&A platform"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/aws-samples",children:"AWS Samples GitHub"})," - Code samples and templates"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"azure-resources",children:"Azure Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://azure.microsoft.com/free/",children:"Azure Free Account"})," - $200 credit + 12 months free services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/learn/",children:"Microsoft Learn"})," - Interactive learning paths"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/azure/architecture/",children:"Azure Architecture Center"})," - Best practices and patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/azure/",children:"Azure Documentation"})," - Complete service documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://docs.microsoft.com/cli/azure/",children:"Azure CLI Documentation"})," - Command line interface guide"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://azure.microsoft.com/resources/templates/",children:"Azure Quickstart Templates"})," - ARM templates"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://techcommunity.microsoft.com/t5/azure/ct-p/Azure",children:"Azure Community"})," - Microsoft tech community"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/Azure-Samples",children:"Azure Samples GitHub"})," - Code examples and templates"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"google-cloud-platform-resources",children:"Google Cloud Platform Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://cloud.google.com/free",children:"GCP Free Tier"})," - $300 credit + always free services"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.cloudskillsboost.google/",children:"Google Cloud Skills Boost"})," - Hands-on labs and learning paths"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://cloud.google.com/architecture",children:"Google Cloud Architecture Center"})," - Reference architectures"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://cloud.google.com/docs",children:"Google Cloud Documentation"})," - Comprehensive guides and references"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://cloud.google.com/sdk/docs",children:"Google Cloud SDK Documentation"})," - CLI and tools documentation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://codelabs.developers.google.com/cloud",children:"Google Cloud Codelabs"})," - Interactive coding tutorials"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://cloud.google.com/community",children:"Google Cloud Community"})," - Community resources and events"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://github.com/GoogleCloudPlatform",children:"Google Cloud Samples GitHub"})," - Code samples and solutions"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"multi-cloud-and-comparison-resources",children:"Multi-Cloud and Comparison Resources"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://comparecloud.in/",children:"Cloud Provider Comparison"})," - Side-by-side service comparisons"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.cncf.io/",children:"Cloud Native Computing Foundation"})," - Cloud native technologies"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.terraform.io/docs/providers/",children:"Terraform Multi-Cloud Documentation"})," - Infrastructure as code"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://kubernetes.io/docs/",children:"Kubernetes Documentation"})," - Container orchestration across clouds"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"certification-paths",children:"Certification Paths"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"AWS Certifications:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cloud Practitioner (Foundational)"}),"\n",(0,t.jsx)(n.li,{children:"Solutions Architect Associate"}),"\n",(0,t.jsx)(n.li,{children:"Developer Associate"}),"\n",(0,t.jsx)(n.li,{children:"SysOps Administrator Associate"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Azure Certifications:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Azure Fundamentals (AZ-900)"}),"\n",(0,t.jsx)(n.li,{children:"Azure Administrator Associate (AZ-104)"}),"\n",(0,t.jsx)(n.li,{children:"Azure Developer Associate (AZ-204)"}),"\n",(0,t.jsx)(n.li,{children:"Azure Solutions Architect Expert (AZ-305)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Google Cloud Certifications:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Cloud Digital Leader"}),"\n",(0,t.jsx)(n.li,{children:"Associate Cloud Engineer"}),"\n",(0,t.jsx)(n.li,{children:"Professional Cloud Architect"}),"\n",(0,t.jsx)(n.li,{children:"Professional Data Engineer"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"practice-platforms",children:"Practice Platforms"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://acloudguru.com/",children:"A Cloud Guru"})," - Multi-cloud training platform"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://cloudacademy.com/",children:"Cloud Academy"})," - Hands-on cloud labs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.pluralsight.com/",children:"Pluralsight"})," - Technology skills platform"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.coursera.org/",children:"Coursera Cloud Computing Courses"})," - University-level courses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.edx.org/",children:"edX Cloud Computing Programs"})," - Free and paid courses"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"After mastering multi-cloud fundamentals:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Choose Primary Cloud"}),": Start with one provider (AWS, Azure, or GCP) based on your career goals"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Practice Cloud-Agnostic Design"}),": Build applications that can run on multiple clouds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Learn Infrastructure as Code"}),": Terraform for multi-cloud, provider-specific tools (CloudFormation, ARM, Deployment Manager)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Explore Containers"}),": Kubernetes across EKS, AKS, and GKE"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Study Multi-Cloud DevOps"}),": CI/CD pipelines that deploy to multiple clouds"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Pursue Certifications"}),": Start with one cloud, expand to others"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Join Communities"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.reddit.com/r/aws/",children:"r/aws"})," - AWS community"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.reddit.com/r/AZURE/",children:"r/AZURE"})," - Azure community"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.reddit.com/r/googlecloud/",children:"r/googlecloud"})," - GCP community"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://www.cncf.io/community/",children:"Cloud Native Computing Foundation"})," - Multi-cloud technologies"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Continue to ",(0,t.jsx)(n.strong,{children:"Infrastructure as Code"})," to learn how to manage multi-cloud resources programmatically, or explore ",(0,t.jsx)(n.strong,{children:"Container Orchestration"})," for cloud-agnostic application deployment strategies!"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>o});var r=s(6540);const t={},a=r.createContext(t);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);